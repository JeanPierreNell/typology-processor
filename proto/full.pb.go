// Generated by https://json-to-proto.github.io/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: full.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FRMSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string                   `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Transaction   *FRMSMessage_Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	NetworkMap    *FRMSMessage_Networkmap  `protobuf:"bytes,3,opt,name=networkMap,proto3" json:"networkMap,omitempty"`
	DataCache     *FRMSMessageDataCache    `protobuf:"bytes,4,opt,name=DataCache,proto3" json:"DataCache,omitempty"`
	MetaData      *FRMSMessage_Metadata    `protobuf:"bytes,5,opt,name=metaData,proto3" json:"metaData,omitempty"`
	// Report
	Report *FRMSMessage_Report `protobuf:"bytes,6,opt,name=report,proto3" json:"report,omitempty"`
	// Pacs002
	TxTp         string                    `protobuf:"bytes,7,opt,name=TxTp,proto3" json:"TxTp,omitempty"`
	FIToFIPmtSts *FRMSMessage_Fitofipmtsts `protobuf:"bytes,8,opt,name=FIToFIPmtSts,proto3" json:"FIToFIPmtSts,omitempty"`
	// Pacs008
	FIToFICstmrCdt *FRMSMessage_Fitoficstmrcdt `protobuf:"bytes,9,opt,name=FIToFICstmrCdt,proto3" json:"FIToFICstmrCdt,omitempty"`
	// Pain001
	CstmrCdtTrfInitn *FRMSMessage_Cstmrcdttrfinitn `protobuf:"bytes,10,opt,name=CstmrCdtTrfInitn,proto3" json:"CstmrCdtTrfInitn,omitempty"`
	// Pain013
	CdtrPmtActvtnReq *FRMSMessage_Cdtrpmtactvtnreq `protobuf:"bytes,11,opt,name=CdtrPmtActvtnReq,proto3" json:"CdtrPmtActvtnReq,omitempty"`
	// Processor based result
	TypologyResult *FRMSMessage_Typologyresult `protobuf:"bytes,12,opt,name=typologyResult,proto3" json:"typologyResult,omitempty"`
	RuleResult     *FRMSMessage_Ruleresults    `protobuf:"bytes,13,opt,name=ruleResult,proto3" json:"ruleResult,omitempty"`
	ChannelResult  *FRMSMessage_Channelresult  `protobuf:"bytes,14,opt,name=channelResult,proto3" json:"channelResult,omitempty"`
	AlreadySent    string                      `protobuf:"bytes,15,opt,name=alreadySent,proto3" json:"alreadySent,omitempty"`
}

func (x *FRMSMessage) Reset() {
	*x = FRMSMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage) ProtoMessage() {}

func (x *FRMSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage.ProtoReflect.Descriptor instead.
func (*FRMSMessage) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0}
}

func (x *FRMSMessage) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *FRMSMessage) GetTransaction() *FRMSMessage_Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *FRMSMessage) GetNetworkMap() *FRMSMessage_Networkmap {
	if x != nil {
		return x.NetworkMap
	}
	return nil
}

func (x *FRMSMessage) GetDataCache() *FRMSMessageDataCache {
	if x != nil {
		return x.DataCache
	}
	return nil
}

func (x *FRMSMessage) GetMetaData() *FRMSMessage_Metadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *FRMSMessage) GetReport() *FRMSMessage_Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *FRMSMessage) GetTxTp() string {
	if x != nil {
		return x.TxTp
	}
	return ""
}

func (x *FRMSMessage) GetFIToFIPmtSts() *FRMSMessage_Fitofipmtsts {
	if x != nil {
		return x.FIToFIPmtSts
	}
	return nil
}

func (x *FRMSMessage) GetFIToFICstmrCdt() *FRMSMessage_Fitoficstmrcdt {
	if x != nil {
		return x.FIToFICstmrCdt
	}
	return nil
}

func (x *FRMSMessage) GetCstmrCdtTrfInitn() *FRMSMessage_Cstmrcdttrfinitn {
	if x != nil {
		return x.CstmrCdtTrfInitn
	}
	return nil
}

func (x *FRMSMessage) GetCdtrPmtActvtnReq() *FRMSMessage_Cdtrpmtactvtnreq {
	if x != nil {
		return x.CdtrPmtActvtnReq
	}
	return nil
}

func (x *FRMSMessage) GetTypologyResult() *FRMSMessage_Typologyresult {
	if x != nil {
		return x.TypologyResult
	}
	return nil
}

func (x *FRMSMessage) GetRuleResult() *FRMSMessage_Ruleresults {
	if x != nil {
		return x.RuleResult
	}
	return nil
}

func (x *FRMSMessage) GetChannelResult() *FRMSMessage_Channelresult {
	if x != nil {
		return x.ChannelResult
	}
	return nil
}

func (x *FRMSMessage) GetAlreadySent() string {
	if x != nil {
		return x.AlreadySent
	}
	return ""
}

// Pain001
type FRMSMessage_Dtandplcofbirth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BirthDt     string `protobuf:"bytes,1,opt,name=BirthDt,proto3" json:"BirthDt,omitempty"`
	CityOfBirth string `protobuf:"bytes,2,opt,name=CityOfBirth,proto3" json:"CityOfBirth,omitempty"`
	CtryOfBirth string `protobuf:"bytes,3,opt,name=CtryOfBirth,proto3" json:"CtryOfBirth,omitempty"`
}

func (x *FRMSMessage_Dtandplcofbirth) Reset() {
	*x = FRMSMessage_Dtandplcofbirth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dtandplcofbirth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dtandplcofbirth) ProtoMessage() {}

func (x *FRMSMessage_Dtandplcofbirth) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dtandplcofbirth.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dtandplcofbirth) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FRMSMessage_Dtandplcofbirth) GetBirthDt() string {
	if x != nil {
		return x.BirthDt
	}
	return ""
}

func (x *FRMSMessage_Dtandplcofbirth) GetCityOfBirth() string {
	if x != nil {
		return x.CityOfBirth
	}
	return ""
}

func (x *FRMSMessage_Dtandplcofbirth) GetCtryOfBirth() string {
	if x != nil {
		return x.CtryOfBirth
	}
	return ""
}

type FRMSMessage_Amt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt float64 `protobuf:"fixed64,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
	Ccy string  `protobuf:"bytes,2,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
}

func (x *FRMSMessage_Amt) Reset() {
	*x = FRMSMessage_Amt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Amt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Amt) ProtoMessage() {}

func (x *FRMSMessage_Amt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Amt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Amt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 1}
}

func (x *FRMSMessage_Amt) GetAmt() float64 {
	if x != nil {
		return x.Amt
	}
	return 0
}

func (x *FRMSMessage_Amt) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

type FRMSMessage_Schmenm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prtry string `protobuf:"bytes,1,opt,name=Prtry,proto3" json:"Prtry,omitempty"`
}

func (x *FRMSMessage_Schmenm) Reset() {
	*x = FRMSMessage_Schmenm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Schmenm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Schmenm) ProtoMessage() {}

func (x *FRMSMessage_Schmenm) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Schmenm.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Schmenm) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 2}
}

func (x *FRMSMessage_Schmenm) GetPrtry() string {
	if x != nil {
		return x.Prtry
	}
	return ""
}

type FRMSMessage_Othr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SchmeNm *FRMSMessage_Schmenm `protobuf:"bytes,2,opt,name=SchmeNm,proto3" json:"SchmeNm,omitempty"`
}

func (x *FRMSMessage_Othr) Reset() {
	*x = FRMSMessage_Othr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Othr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Othr) ProtoMessage() {}

func (x *FRMSMessage_Othr) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Othr.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Othr) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 3}
}

func (x *FRMSMessage_Othr) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Othr) GetSchmeNm() *FRMSMessage_Schmenm {
	if x != nil {
		return x.SchmeNm
	}
	return nil
}

type FRMSMessage_Prvtid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DtAndPlcOfBirth *FRMSMessage_Dtandplcofbirth `protobuf:"bytes,1,opt,name=DtAndPlcOfBirth,proto3" json:"DtAndPlcOfBirth,omitempty"`
	Othr            *FRMSMessage_Othr            `protobuf:"bytes,2,opt,name=Othr,proto3" json:"Othr,omitempty"`
}

func (x *FRMSMessage_Prvtid) Reset() {
	*x = FRMSMessage_Prvtid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Prvtid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Prvtid) ProtoMessage() {}

func (x *FRMSMessage_Prvtid) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Prvtid.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Prvtid) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 4}
}

func (x *FRMSMessage_Prvtid) GetDtAndPlcOfBirth() *FRMSMessage_Dtandplcofbirth {
	if x != nil {
		return x.DtAndPlcOfBirth
	}
	return nil
}

func (x *FRMSMessage_Prvtid) GetOthr() *FRMSMessage_Othr {
	if x != nil {
		return x.Othr
	}
	return nil
}

type FRMSMessage_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrvtId *FRMSMessage_Prvtid `protobuf:"bytes,1,opt,name=PrvtId,proto3" json:"PrvtId,omitempty"`
}

func (x *FRMSMessage_Id) Reset() {
	*x = FRMSMessage_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Id) ProtoMessage() {}

func (x *FRMSMessage_Id) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Id.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Id) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FRMSMessage_Id) GetPrvtId() *FRMSMessage_Prvtid {
	if x != nil {
		return x.PrvtId
	}
	return nil
}

type FRMSMessage_Ctctdtls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobNb string `protobuf:"bytes,1,opt,name=MobNb,proto3" json:"MobNb,omitempty"`
}

func (x *FRMSMessage_Ctctdtls) Reset() {
	*x = FRMSMessage_Ctctdtls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Ctctdtls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Ctctdtls) ProtoMessage() {}

func (x *FRMSMessage_Ctctdtls) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Ctctdtls.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Ctctdtls) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 6}
}

func (x *FRMSMessage_Ctctdtls) GetMobNb() string {
	if x != nil {
		return x.MobNb
	}
	return ""
}

type FRMSMessage_Initgpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nm       string                `protobuf:"bytes,1,opt,name=Nm,proto3" json:"Nm,omitempty"`
	Id       *FRMSMessage_Id       `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	CtctDtls *FRMSMessage_Ctctdtls `protobuf:"bytes,3,opt,name=CtctDtls,proto3" json:"CtctDtls,omitempty"`
}

func (x *FRMSMessage_Initgpty) Reset() {
	*x = FRMSMessage_Initgpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Initgpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Initgpty) ProtoMessage() {}

func (x *FRMSMessage_Initgpty) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Initgpty.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Initgpty) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 7}
}

func (x *FRMSMessage_Initgpty) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *FRMSMessage_Initgpty) GetId() *FRMSMessage_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FRMSMessage_Initgpty) GetCtctDtls() *FRMSMessage_Ctctdtls {
	if x != nil {
		return x.CtctDtls
	}
	return nil
}

type FRMSMessage_GrphdrPain001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string                `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	CreDtTm  string                `protobuf:"bytes,2,opt,name=CreDtTm,proto3" json:"CreDtTm,omitempty"`
	NbOfTxs  uint32                `protobuf:"varint,3,opt,name=NbOfTxs,proto3" json:"NbOfTxs,omitempty"`
	InitgPty *FRMSMessage_Initgpty `protobuf:"bytes,4,opt,name=InitgPty,proto3" json:"InitgPty,omitempty"`
}

func (x *FRMSMessage_GrphdrPain001) Reset() {
	*x = FRMSMessage_GrphdrPain001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_GrphdrPain001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_GrphdrPain001) ProtoMessage() {}

func (x *FRMSMessage_GrphdrPain001) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_GrphdrPain001.ProtoReflect.Descriptor instead.
func (*FRMSMessage_GrphdrPain001) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 8}
}

func (x *FRMSMessage_GrphdrPain001) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *FRMSMessage_GrphdrPain001) GetCreDtTm() string {
	if x != nil {
		return x.CreDtTm
	}
	return ""
}

func (x *FRMSMessage_GrphdrPain001) GetNbOfTxs() uint32 {
	if x != nil {
		return x.NbOfTxs
	}
	return 0
}

func (x *FRMSMessage_GrphdrPain001) GetInitgPty() *FRMSMessage_Initgpty {
	if x != nil {
		return x.InitgPty
	}
	return nil
}

type FRMSMessage_Dbtadvc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cd    string `protobuf:"bytes,1,opt,name=Cd,proto3" json:"Cd,omitempty"`
	Prtry string `protobuf:"bytes,2,opt,name=Prtry,proto3" json:"Prtry,omitempty"`
}

func (x *FRMSMessage_Dbtadvc) Reset() {
	*x = FRMSMessage_Dbtadvc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtadvc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtadvc) ProtoMessage() {}

func (x *FRMSMessage_Dbtadvc) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtadvc.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtadvc) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 9}
}

func (x *FRMSMessage_Dbtadvc) GetCd() string {
	if x != nil {
		return x.Cd
	}
	return ""
}

func (x *FRMSMessage_Dbtadvc) GetPrtry() string {
	if x != nil {
		return x.Prtry
	}
	return ""
}

type FRMSMessage_Reqdadvctp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbtAdvc *FRMSMessage_Dbtadvc `protobuf:"bytes,1,opt,name=DbtAdvc,proto3" json:"DbtAdvc,omitempty"`
}

func (x *FRMSMessage_Reqdadvctp) Reset() {
	*x = FRMSMessage_Reqdadvctp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Reqdadvctp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Reqdadvctp) ProtoMessage() {}

func (x *FRMSMessage_Reqdadvctp) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Reqdadvctp.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Reqdadvctp) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 10}
}

func (x *FRMSMessage_Reqdadvctp) GetDbtAdvc() *FRMSMessage_Dbtadvc {
	if x != nil {
		return x.DbtAdvc
	}
	return nil
}

type FRMSMessage_Reqdexctndt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dt   *string `protobuf:"bytes,1,opt,name=Dt,proto3,oneof" json:"Dt,omitempty"`
	DtTm string  `protobuf:"bytes,2,opt,name=DtTm,proto3" json:"DtTm,omitempty"`
}

func (x *FRMSMessage_Reqdexctndt) Reset() {
	*x = FRMSMessage_Reqdexctndt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Reqdexctndt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Reqdexctndt) ProtoMessage() {}

func (x *FRMSMessage_Reqdexctndt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Reqdexctndt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Reqdexctndt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 11}
}

func (x *FRMSMessage_Reqdexctndt) GetDt() string {
	if x != nil && x.Dt != nil {
		return *x.Dt
	}
	return ""
}

func (x *FRMSMessage_Reqdexctndt) GetDtTm() string {
	if x != nil {
		return x.DtTm
	}
	return ""
}

type FRMSMessage_Dbtr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nm       string                `protobuf:"bytes,1,opt,name=Nm,proto3" json:"Nm,omitempty"`
	Id       *FRMSMessage_Id       `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	CtctDtls *FRMSMessage_Ctctdtls `protobuf:"bytes,3,opt,name=CtctDtls,proto3" json:"CtctDtls,omitempty"`
}

func (x *FRMSMessage_Dbtr) Reset() {
	*x = FRMSMessage_Dbtr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtr) ProtoMessage() {}

func (x *FRMSMessage_Dbtr) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtr.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtr) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 12}
}

func (x *FRMSMessage_Dbtr) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *FRMSMessage_Dbtr) GetId() *FRMSMessage_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FRMSMessage_Dbtr) GetCtctDtls() *FRMSMessage_Ctctdtls {
	if x != nil {
		return x.CtctDtls
	}
	return nil
}

type FRMSMessage_Id2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Othr *FRMSMessage_Othr `protobuf:"bytes,1,opt,name=Othr,proto3" json:"Othr,omitempty"`
}

func (x *FRMSMessage_Id2) Reset() {
	*x = FRMSMessage_Id2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Id2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Id2) ProtoMessage() {}

func (x *FRMSMessage_Id2) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Id2.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Id2) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 13}
}

func (x *FRMSMessage_Id2) GetOthr() *FRMSMessage_Othr {
	if x != nil {
		return x.Othr
	}
	return nil
}

type FRMSMessage_Dbtracct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *FRMSMessage_Id2 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Nm string           `protobuf:"bytes,2,opt,name=Nm,proto3" json:"Nm,omitempty"`
}

func (x *FRMSMessage_Dbtracct) Reset() {
	*x = FRMSMessage_Dbtracct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtracct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtracct) ProtoMessage() {}

func (x *FRMSMessage_Dbtracct) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtracct.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtracct) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 14}
}

func (x *FRMSMessage_Dbtracct) GetId() *FRMSMessage_Id2 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FRMSMessage_Dbtracct) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

type FRMSMessage_Clrsysmmbid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MmbId string `protobuf:"bytes,1,opt,name=MmbId,proto3" json:"MmbId,omitempty"`
}

func (x *FRMSMessage_Clrsysmmbid) Reset() {
	*x = FRMSMessage_Clrsysmmbid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Clrsysmmbid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Clrsysmmbid) ProtoMessage() {}

func (x *FRMSMessage_Clrsysmmbid) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Clrsysmmbid.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Clrsysmmbid) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 15}
}

func (x *FRMSMessage_Clrsysmmbid) GetMmbId() string {
	if x != nil {
		return x.MmbId
	}
	return ""
}

type FRMSMessage_Fininstnid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClrSysMmbId *FRMSMessage_Clrsysmmbid `protobuf:"bytes,1,opt,name=ClrSysMmbId,proto3" json:"ClrSysMmbId,omitempty"`
}

func (x *FRMSMessage_Fininstnid) Reset() {
	*x = FRMSMessage_Fininstnid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Fininstnid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Fininstnid) ProtoMessage() {}

func (x *FRMSMessage_Fininstnid) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Fininstnid.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Fininstnid) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 16}
}

func (x *FRMSMessage_Fininstnid) GetClrSysMmbId() *FRMSMessage_Clrsysmmbid {
	if x != nil {
		return x.ClrSysMmbId
	}
	return nil
}

type FRMSMessage_Dbtragt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinInstnId *FRMSMessage_Fininstnid `protobuf:"bytes,1,opt,name=FinInstnId,proto3" json:"FinInstnId,omitempty"`
}

func (x *FRMSMessage_Dbtragt) Reset() {
	*x = FRMSMessage_Dbtragt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtragt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtragt) ProtoMessage() {}

func (x *FRMSMessage_Dbtragt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtragt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtragt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 17}
}

func (x *FRMSMessage_Dbtragt) GetFinInstnId() *FRMSMessage_Fininstnid {
	if x != nil {
		return x.FinInstnId
	}
	return nil
}

type FRMSMessage_Pmttpinf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtgyPurp *FRMSMessage_Schmenm `protobuf:"bytes,1,opt,name=CtgyPurp,proto3" json:"CtgyPurp,omitempty"`
}

func (x *FRMSMessage_Pmttpinf) Reset() {
	*x = FRMSMessage_Pmttpinf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pmttpinf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pmttpinf) ProtoMessage() {}

func (x *FRMSMessage_Pmttpinf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pmttpinf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pmttpinf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 18}
}

func (x *FRMSMessage_Pmttpinf) GetCtgyPurp() *FRMSMessage_Schmenm {
	if x != nil {
		return x.CtgyPurp
	}
	return nil
}

type FRMSMessage_Instdamt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Instdamt) Reset() {
	*x = FRMSMessage_Instdamt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Instdamt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Instdamt) ProtoMessage() {}

func (x *FRMSMessage_Instdamt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Instdamt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Instdamt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 19}
}

func (x *FRMSMessage_Instdamt) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

type FRMSMessage_Eqvtamt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt      *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
	CcyOfTrf string           `protobuf:"bytes,2,opt,name=CcyOfTrf,proto3" json:"CcyOfTrf,omitempty"`
}

func (x *FRMSMessage_Eqvtamt) Reset() {
	*x = FRMSMessage_Eqvtamt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Eqvtamt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Eqvtamt) ProtoMessage() {}

func (x *FRMSMessage_Eqvtamt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Eqvtamt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Eqvtamt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 20}
}

func (x *FRMSMessage_Eqvtamt) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

func (x *FRMSMessage_Eqvtamt) GetCcyOfTrf() string {
	if x != nil {
		return x.CcyOfTrf
	}
	return ""
}

type FRMSMessage_Amt1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstdAmt *FRMSMessage_Instdamt `protobuf:"bytes,1,opt,name=InstdAmt,proto3" json:"InstdAmt,omitempty"`
	EqvtAmt  *FRMSMessage_Eqvtamt  `protobuf:"bytes,2,opt,name=EqvtAmt,proto3" json:"EqvtAmt,omitempty"`
}

func (x *FRMSMessage_Amt1) Reset() {
	*x = FRMSMessage_Amt1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Amt1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Amt1) ProtoMessage() {}

func (x *FRMSMessage_Amt1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Amt1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Amt1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 21}
}

func (x *FRMSMessage_Amt1) GetInstdAmt() *FRMSMessage_Instdamt {
	if x != nil {
		return x.InstdAmt
	}
	return nil
}

func (x *FRMSMessage_Amt1) GetEqvtAmt() *FRMSMessage_Eqvtamt {
	if x != nil {
		return x.EqvtAmt
	}
	return nil
}

type FRMSMessage_Cdtragt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinInstnId *FRMSMessage_Fininstnid `protobuf:"bytes,1,opt,name=FinInstnId,proto3" json:"FinInstnId,omitempty"`
}

func (x *FRMSMessage_Cdtragt) Reset() {
	*x = FRMSMessage_Cdtragt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cdtragt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cdtragt) ProtoMessage() {}

func (x *FRMSMessage_Cdtragt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cdtragt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cdtragt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 22}
}

func (x *FRMSMessage_Cdtragt) GetFinInstnId() *FRMSMessage_Fininstnid {
	if x != nil {
		return x.FinInstnId
	}
	return nil
}

type FRMSMessage_Cdtr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nm       string                `protobuf:"bytes,1,opt,name=Nm,proto3" json:"Nm,omitempty"`
	Id       *FRMSMessage_Id       `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	CtctDtls *FRMSMessage_Ctctdtls `protobuf:"bytes,3,opt,name=CtctDtls,proto3" json:"CtctDtls,omitempty"`
}

func (x *FRMSMessage_Cdtr) Reset() {
	*x = FRMSMessage_Cdtr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cdtr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cdtr) ProtoMessage() {}

func (x *FRMSMessage_Cdtr) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cdtr.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cdtr) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 23}
}

func (x *FRMSMessage_Cdtr) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *FRMSMessage_Cdtr) GetId() *FRMSMessage_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FRMSMessage_Cdtr) GetCtctDtls() *FRMSMessage_Ctctdtls {
	if x != nil {
		return x.CtctDtls
	}
	return nil
}

type FRMSMessage_Cdtracct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *FRMSMessage_Id2 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Nm string           `protobuf:"bytes,2,opt,name=Nm,proto3" json:"Nm,omitempty"`
}

func (x *FRMSMessage_Cdtracct) Reset() {
	*x = FRMSMessage_Cdtracct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cdtracct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cdtracct) ProtoMessage() {}

func (x *FRMSMessage_Cdtracct) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cdtracct.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cdtracct) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 24}
}

func (x *FRMSMessage_Cdtracct) GetId() *FRMSMessage_Id2 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FRMSMessage_Cdtracct) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

type FRMSMessage_Purp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cd string `protobuf:"bytes,1,opt,name=Cd,proto3" json:"Cd,omitempty"`
}

func (x *FRMSMessage_Purp) Reset() {
	*x = FRMSMessage_Purp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Purp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Purp) ProtoMessage() {}

func (x *FRMSMessage_Purp) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Purp.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Purp) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 25}
}

func (x *FRMSMessage_Purp) GetCd() string {
	if x != nil {
		return x.Cd
	}
	return ""
}

type FRMSMessage_Dtls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tp string `protobuf:"bytes,1,opt,name=Tp,proto3" json:"Tp,omitempty"`
	Cd string `protobuf:"bytes,2,opt,name=Cd,proto3" json:"Cd,omitempty"`
}

func (x *FRMSMessage_Dtls) Reset() {
	*x = FRMSMessage_Dtls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dtls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dtls) ProtoMessage() {}

func (x *FRMSMessage_Dtls) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dtls.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dtls) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 26}
}

func (x *FRMSMessage_Dtls) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

func (x *FRMSMessage_Dtls) GetCd() string {
	if x != nil {
		return x.Cd
	}
	return ""
}

type FRMSMessage_Rgltryrptg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dtls *FRMSMessage_Dtls `protobuf:"bytes,1,opt,name=Dtls,proto3" json:"Dtls,omitempty"`
}

func (x *FRMSMessage_Rgltryrptg) Reset() {
	*x = FRMSMessage_Rgltryrptg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Rgltryrptg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Rgltryrptg) ProtoMessage() {}

func (x *FRMSMessage_Rgltryrptg) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Rgltryrptg.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Rgltryrptg) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 27}
}

func (x *FRMSMessage_Rgltryrptg) GetDtls() *FRMSMessage_Dtls {
	if x != nil {
		return x.Dtls
	}
	return nil
}

type FRMSMessage_Rmtinf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ustrd string `protobuf:"bytes,1,opt,name=Ustrd,proto3" json:"Ustrd,omitempty"`
}

func (x *FRMSMessage_Rmtinf) Reset() {
	*x = FRMSMessage_Rmtinf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Rmtinf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Rmtinf) ProtoMessage() {}

func (x *FRMSMessage_Rmtinf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Rmtinf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Rmtinf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 28}
}

func (x *FRMSMessage_Rmtinf) GetUstrd() string {
	if x != nil {
		return x.Ustrd
	}
	return ""
}

type FRMSMessage_Dbtr1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrstNm           string `protobuf:"bytes,1,opt,name=FrstNm,proto3" json:"FrstNm,omitempty"`
	MddlNm           string `protobuf:"bytes,2,opt,name=MddlNm,proto3" json:"MddlNm,omitempty"`
	LastNm           string `protobuf:"bytes,3,opt,name=LastNm,proto3" json:"LastNm,omitempty"`
	MrchntClssfctnCd string `protobuf:"bytes,4,opt,name=MrchntClssfctnCd,proto3" json:"MrchntClssfctnCd,omitempty"`
}

func (x *FRMSMessage_Dbtr1) Reset() {
	*x = FRMSMessage_Dbtr1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtr1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtr1) ProtoMessage() {}

func (x *FRMSMessage_Dbtr1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtr1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtr1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 29}
}

func (x *FRMSMessage_Dbtr1) GetFrstNm() string {
	if x != nil {
		return x.FrstNm
	}
	return ""
}

func (x *FRMSMessage_Dbtr1) GetMddlNm() string {
	if x != nil {
		return x.MddlNm
	}
	return ""
}

func (x *FRMSMessage_Dbtr1) GetLastNm() string {
	if x != nil {
		return x.LastNm
	}
	return ""
}

func (x *FRMSMessage_Dbtr1) GetMrchntClssfctnCd() string {
	if x != nil {
		return x.MrchntClssfctnCd
	}
	return ""
}

type FRMSMessage_Dbtrfinsvcsprvdrfees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ccy string `protobuf:"bytes,1,opt,name=Ccy,proto3" json:"Ccy,omitempty"`
	Amt uint32 `protobuf:"varint,2,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Dbtrfinsvcsprvdrfees) Reset() {
	*x = FRMSMessage_Dbtrfinsvcsprvdrfees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Dbtrfinsvcsprvdrfees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Dbtrfinsvcsprvdrfees) ProtoMessage() {}

func (x *FRMSMessage_Dbtrfinsvcsprvdrfees) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Dbtrfinsvcsprvdrfees.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Dbtrfinsvcsprvdrfees) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 30}
}

func (x *FRMSMessage_Dbtrfinsvcsprvdrfees) GetCcy() string {
	if x != nil {
		return x.Ccy
	}
	return ""
}

func (x *FRMSMessage_Dbtrfinsvcsprvdrfees) GetAmt() uint32 {
	if x != nil {
		return x.Amt
	}
	return 0
}

type FRMSMessage_DocPain001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbtr                 *FRMSMessage_Dbtr1                `protobuf:"bytes,1,opt,name=Dbtr,proto3" json:"Dbtr,omitempty"`
	Cdtr                 *FRMSMessage_Dbtr1                `protobuf:"bytes,2,opt,name=Cdtr,proto3" json:"Cdtr,omitempty"`
	DbtrFinSvcsPrvdrFees *FRMSMessage_Dbtrfinsvcsprvdrfees `protobuf:"bytes,3,opt,name=DbtrFinSvcsPrvdrFees,proto3" json:"DbtrFinSvcsPrvdrFees,omitempty"`
	Xprtn                string                            `protobuf:"bytes,4,opt,name=Xprtn,proto3" json:"Xprtn,omitempty"`
}

func (x *FRMSMessage_DocPain001) Reset() {
	*x = FRMSMessage_DocPain001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_DocPain001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_DocPain001) ProtoMessage() {}

func (x *FRMSMessage_DocPain001) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_DocPain001.ProtoReflect.Descriptor instead.
func (*FRMSMessage_DocPain001) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 31}
}

func (x *FRMSMessage_DocPain001) GetDbtr() *FRMSMessage_Dbtr1 {
	if x != nil {
		return x.Dbtr
	}
	return nil
}

func (x *FRMSMessage_DocPain001) GetCdtr() *FRMSMessage_Dbtr1 {
	if x != nil {
		return x.Cdtr
	}
	return nil
}

func (x *FRMSMessage_DocPain001) GetDbtrFinSvcsPrvdrFees() *FRMSMessage_Dbtrfinsvcsprvdrfees {
	if x != nil {
		return x.DbtrFinSvcsPrvdrFees
	}
	return nil
}

func (x *FRMSMessage_DocPain001) GetXprtn() string {
	if x != nil {
		return x.Xprtn
	}
	return ""
}

type FRMSMessage_EnvlpPain001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *FRMSMessage_DocPain001 `protobuf:"bytes,1,opt,name=Doc,proto3" json:"Doc,omitempty"`
}

func (x *FRMSMessage_EnvlpPain001) Reset() {
	*x = FRMSMessage_EnvlpPain001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_EnvlpPain001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_EnvlpPain001) ProtoMessage() {}

func (x *FRMSMessage_EnvlpPain001) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_EnvlpPain001.ProtoReflect.Descriptor instead.
func (*FRMSMessage_EnvlpPain001) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 32}
}

func (x *FRMSMessage_EnvlpPain001) GetDoc() *FRMSMessage_DocPain001 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type FRMSMessage_SplmtrydataPain001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envlp *FRMSMessage_EnvlpPain001 `protobuf:"bytes,1,opt,name=Envlp,proto3" json:"Envlp,omitempty"`
}

func (x *FRMSMessage_SplmtrydataPain001) Reset() {
	*x = FRMSMessage_SplmtrydataPain001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_SplmtrydataPain001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_SplmtrydataPain001) ProtoMessage() {}

func (x *FRMSMessage_SplmtrydataPain001) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_SplmtrydataPain001.ProtoReflect.Descriptor instead.
func (*FRMSMessage_SplmtrydataPain001) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 33}
}

func (x *FRMSMessage_SplmtrydataPain001) GetEnvlp() *FRMSMessage_EnvlpPain001 {
	if x != nil {
		return x.Envlp
	}
	return nil
}

type FRMSMessage_Cdttrftxinf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtId       *FRMSMessage_Pmtid              `protobuf:"bytes,1,opt,name=PmtId,proto3" json:"PmtId,omitempty"`
	PmtTpInf    *FRMSMessage_Pmttpinf           `protobuf:"bytes,2,opt,name=PmtTpInf,proto3" json:"PmtTpInf,omitempty"`
	Amt         *FRMSMessage_Amt1               `protobuf:"bytes,3,opt,name=Amt,proto3" json:"Amt,omitempty"`
	ChrgBr      string                          `protobuf:"bytes,4,opt,name=ChrgBr,proto3" json:"ChrgBr,omitempty"`
	CdtrAgt     *FRMSMessage_Cdtragt            `protobuf:"bytes,5,opt,name=CdtrAgt,proto3" json:"CdtrAgt,omitempty"`
	Cdtr        *FRMSMessage_Cdtr               `protobuf:"bytes,6,opt,name=Cdtr,proto3" json:"Cdtr,omitempty"`
	CdtrAcct    *FRMSMessage_Cdtracct           `protobuf:"bytes,7,opt,name=CdtrAcct,proto3" json:"CdtrAcct,omitempty"`
	Purp        *FRMSMessage_Purp               `protobuf:"bytes,8,opt,name=Purp,proto3" json:"Purp,omitempty"`
	RgltryRptg  *FRMSMessage_Rgltryrptg         `protobuf:"bytes,9,opt,name=RgltryRptg,proto3" json:"RgltryRptg,omitempty"`
	RmtInf      *FRMSMessage_Rmtinf             `protobuf:"bytes,10,opt,name=RmtInf,proto3" json:"RmtInf,omitempty"`
	SplmtryData *FRMSMessage_SplmtrydataPain001 `protobuf:"bytes,11,opt,name=SplmtryData,proto3" json:"SplmtryData,omitempty"`
}

func (x *FRMSMessage_Cdttrftxinf) Reset() {
	*x = FRMSMessage_Cdttrftxinf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cdttrftxinf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cdttrftxinf) ProtoMessage() {}

func (x *FRMSMessage_Cdttrftxinf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cdttrftxinf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cdttrftxinf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 34}
}

func (x *FRMSMessage_Cdttrftxinf) GetPmtId() *FRMSMessage_Pmtid {
	if x != nil {
		return x.PmtId
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetPmtTpInf() *FRMSMessage_Pmttpinf {
	if x != nil {
		return x.PmtTpInf
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetAmt() *FRMSMessage_Amt1 {
	if x != nil {
		return x.Amt
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetChrgBr() string {
	if x != nil {
		return x.ChrgBr
	}
	return ""
}

func (x *FRMSMessage_Cdttrftxinf) GetCdtrAgt() *FRMSMessage_Cdtragt {
	if x != nil {
		return x.CdtrAgt
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetCdtr() *FRMSMessage_Cdtr {
	if x != nil {
		return x.Cdtr
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetCdtrAcct() *FRMSMessage_Cdtracct {
	if x != nil {
		return x.CdtrAcct
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetPurp() *FRMSMessage_Purp {
	if x != nil {
		return x.Purp
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetRgltryRptg() *FRMSMessage_Rgltryrptg {
	if x != nil {
		return x.RgltryRptg
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetRmtInf() *FRMSMessage_Rmtinf {
	if x != nil {
		return x.RmtInf
	}
	return nil
}

func (x *FRMSMessage_Cdttrftxinf) GetSplmtryData() *FRMSMessage_SplmtrydataPain001 {
	if x != nil {
		return x.SplmtryData
	}
	return nil
}

type FRMSMessage_Pmtinf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtInfId    string                   `protobuf:"bytes,1,opt,name=PmtInfId,proto3" json:"PmtInfId,omitempty"`
	PmtMtd      string                   `protobuf:"bytes,2,opt,name=PmtMtd,proto3" json:"PmtMtd,omitempty"`
	ReqdAdvcTp  *FRMSMessage_Reqdadvctp  `protobuf:"bytes,3,opt,name=ReqdAdvcTp,proto3" json:"ReqdAdvcTp,omitempty"`
	ReqdExctnDt *FRMSMessage_Reqdexctndt `protobuf:"bytes,4,opt,name=ReqdExctnDt,proto3" json:"ReqdExctnDt,omitempty"`
	Dbtr        *FRMSMessage_Dbtr        `protobuf:"bytes,5,opt,name=Dbtr,proto3" json:"Dbtr,omitempty"`
	DbtrAcct    *FRMSMessage_Dbtracct    `protobuf:"bytes,6,opt,name=DbtrAcct,proto3" json:"DbtrAcct,omitempty"`
	DbtrAgt     *FRMSMessage_Dbtragt     `protobuf:"bytes,7,opt,name=DbtrAgt,proto3" json:"DbtrAgt,omitempty"`
	CdtTrfTxInf *FRMSMessage_Cdttrftxinf `protobuf:"bytes,8,opt,name=CdtTrfTxInf,proto3" json:"CdtTrfTxInf,omitempty"`
}

func (x *FRMSMessage_Pmtinf) Reset() {
	*x = FRMSMessage_Pmtinf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pmtinf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pmtinf) ProtoMessage() {}

func (x *FRMSMessage_Pmtinf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pmtinf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pmtinf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 35}
}

func (x *FRMSMessage_Pmtinf) GetPmtInfId() string {
	if x != nil {
		return x.PmtInfId
	}
	return ""
}

func (x *FRMSMessage_Pmtinf) GetPmtMtd() string {
	if x != nil {
		return x.PmtMtd
	}
	return ""
}

func (x *FRMSMessage_Pmtinf) GetReqdAdvcTp() *FRMSMessage_Reqdadvctp {
	if x != nil {
		return x.ReqdAdvcTp
	}
	return nil
}

func (x *FRMSMessage_Pmtinf) GetReqdExctnDt() *FRMSMessage_Reqdexctndt {
	if x != nil {
		return x.ReqdExctnDt
	}
	return nil
}

func (x *FRMSMessage_Pmtinf) GetDbtr() *FRMSMessage_Dbtr {
	if x != nil {
		return x.Dbtr
	}
	return nil
}

func (x *FRMSMessage_Pmtinf) GetDbtrAcct() *FRMSMessage_Dbtracct {
	if x != nil {
		return x.DbtrAcct
	}
	return nil
}

func (x *FRMSMessage_Pmtinf) GetDbtrAgt() *FRMSMessage_Dbtragt {
	if x != nil {
		return x.DbtrAgt
	}
	return nil
}

func (x *FRMSMessage_Pmtinf) GetCdtTrfTxInf() *FRMSMessage_Cdttrftxinf {
	if x != nil {
		return x.CdtTrfTxInf
	}
	return nil
}

type FRMSMessage_Glctn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat  string `protobuf:"bytes,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Long string `protobuf:"bytes,2,opt,name=Long,proto3" json:"Long,omitempty"`
}

func (x *FRMSMessage_Glctn) Reset() {
	*x = FRMSMessage_Glctn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Glctn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Glctn) ProtoMessage() {}

func (x *FRMSMessage_Glctn) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Glctn.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Glctn) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 36}
}

func (x *FRMSMessage_Glctn) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *FRMSMessage_Glctn) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

type FRMSMessage_Initgpty1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitrTp *string            `protobuf:"bytes,1,opt,name=InitrTp,proto3,oneof" json:"InitrTp,omitempty"`
	Glctn   *FRMSMessage_Glctn `protobuf:"bytes,2,opt,name=Glctn,proto3" json:"Glctn,omitempty"`
}

func (x *FRMSMessage_Initgpty1) Reset() {
	*x = FRMSMessage_Initgpty1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Initgpty1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Initgpty1) ProtoMessage() {}

func (x *FRMSMessage_Initgpty1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Initgpty1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Initgpty1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 37}
}

func (x *FRMSMessage_Initgpty1) GetInitrTp() string {
	if x != nil && x.InitrTp != nil {
		return *x.InitrTp
	}
	return ""
}

func (x *FRMSMessage_Initgpty1) GetGlctn() *FRMSMessage_Glctn {
	if x != nil {
		return x.Glctn
	}
	return nil
}

type FRMSMessage_Doc1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitgPty *FRMSMessage_Initgpty1 `protobuf:"bytes,1,opt,name=InitgPty,proto3" json:"InitgPty,omitempty"`
}

func (x *FRMSMessage_Doc1) Reset() {
	*x = FRMSMessage_Doc1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Doc1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Doc1) ProtoMessage() {}

func (x *FRMSMessage_Doc1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Doc1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Doc1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 38}
}

func (x *FRMSMessage_Doc1) GetInitgPty() *FRMSMessage_Initgpty1 {
	if x != nil {
		return x.InitgPty
	}
	return nil
}

type FRMSMessage_Envlp1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *FRMSMessage_Doc1 `protobuf:"bytes,1,opt,name=Doc,proto3" json:"Doc,omitempty"`
}

func (x *FRMSMessage_Envlp1) Reset() {
	*x = FRMSMessage_Envlp1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Envlp1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Envlp1) ProtoMessage() {}

func (x *FRMSMessage_Envlp1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Envlp1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Envlp1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 39}
}

func (x *FRMSMessage_Envlp1) GetDoc() *FRMSMessage_Doc1 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type FRMSMessage_Splmtrydata1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envlp *FRMSMessage_Envlp1 `protobuf:"bytes,1,opt,name=Envlp,proto3" json:"Envlp,omitempty"`
}

func (x *FRMSMessage_Splmtrydata1) Reset() {
	*x = FRMSMessage_Splmtrydata1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Splmtrydata1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Splmtrydata1) ProtoMessage() {}

func (x *FRMSMessage_Splmtrydata1) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Splmtrydata1.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Splmtrydata1) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 40}
}

func (x *FRMSMessage_Splmtrydata1) GetEnvlp() *FRMSMessage_Envlp1 {
	if x != nil {
		return x.Envlp
	}
	return nil
}

type FRMSMessage_Cstmrcdttrfinitn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpHdr      *FRMSMessage_GrphdrPain001 `protobuf:"bytes,1,opt,name=GrpHdr,proto3" json:"GrpHdr,omitempty"`
	PmtInf      *FRMSMessage_Pmtinf        `protobuf:"bytes,2,opt,name=PmtInf,proto3" json:"PmtInf,omitempty"`
	SplmtryData *FRMSMessage_Splmtrydata1  `protobuf:"bytes,3,opt,name=SplmtryData,proto3" json:"SplmtryData,omitempty"`
}

func (x *FRMSMessage_Cstmrcdttrfinitn) Reset() {
	*x = FRMSMessage_Cstmrcdttrfinitn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cstmrcdttrfinitn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cstmrcdttrfinitn) ProtoMessage() {}

func (x *FRMSMessage_Cstmrcdttrfinitn) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cstmrcdttrfinitn.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cstmrcdttrfinitn) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 41}
}

func (x *FRMSMessage_Cstmrcdttrfinitn) GetGrpHdr() *FRMSMessage_GrphdrPain001 {
	if x != nil {
		return x.GrpHdr
	}
	return nil
}

func (x *FRMSMessage_Cstmrcdttrfinitn) GetPmtInf() *FRMSMessage_Pmtinf {
	if x != nil {
		return x.PmtInf
	}
	return nil
}

func (x *FRMSMessage_Cstmrcdttrfinitn) GetSplmtryData() *FRMSMessage_Splmtrydata1 {
	if x != nil {
		return x.SplmtryData
	}
	return nil
}

type FRMSMessage_GrphdrPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string                `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	CreDtTm  string                `protobuf:"bytes,2,opt,name=CreDtTm,proto3" json:"CreDtTm,omitempty"`
	NbOfTxs  uint32                `protobuf:"varint,3,opt,name=NbOfTxs,proto3" json:"NbOfTxs,omitempty"`
	InitgPty *FRMSMessage_Initgpty `protobuf:"bytes,4,opt,name=InitgPty,proto3" json:"InitgPty,omitempty"`
}

func (x *FRMSMessage_GrphdrPain013) Reset() {
	*x = FRMSMessage_GrphdrPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_GrphdrPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_GrphdrPain013) ProtoMessage() {}

func (x *FRMSMessage_GrphdrPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_GrphdrPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_GrphdrPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 42}
}

func (x *FRMSMessage_GrphdrPain013) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *FRMSMessage_GrphdrPain013) GetCreDtTm() string {
	if x != nil {
		return x.CreDtTm
	}
	return ""
}

func (x *FRMSMessage_GrphdrPain013) GetNbOfTxs() uint32 {
	if x != nil {
		return x.NbOfTxs
	}
	return 0
}

func (x *FRMSMessage_GrphdrPain013) GetInitgPty() *FRMSMessage_Initgpty {
	if x != nil {
		return x.InitgPty
	}
	return nil
}

type FRMSMessage_Pyeercvamt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Pyeercvamt) Reset() {
	*x = FRMSMessage_Pyeercvamt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pyeercvamt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pyeercvamt) ProtoMessage() {}

func (x *FRMSMessage_Pyeercvamt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pyeercvamt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pyeercvamt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 43}
}

func (x *FRMSMessage_Pyeercvamt) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

type FRMSMessage_Pyeefinsvcsprvdrfee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Pyeefinsvcsprvdrfee) Reset() {
	*x = FRMSMessage_Pyeefinsvcsprvdrfee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pyeefinsvcsprvdrfee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pyeefinsvcsprvdrfee) ProtoMessage() {}

func (x *FRMSMessage_Pyeefinsvcsprvdrfee) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pyeefinsvcsprvdrfee.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pyeefinsvcsprvdrfee) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 44}
}

func (x *FRMSMessage_Pyeefinsvcsprvdrfee) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

type FRMSMessage_Pyeefinsvcsprvdrcomssn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Pyeefinsvcsprvdrcomssn) Reset() {
	*x = FRMSMessage_Pyeefinsvcsprvdrcomssn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pyeefinsvcsprvdrcomssn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pyeefinsvcsprvdrcomssn) ProtoMessage() {}

func (x *FRMSMessage_Pyeefinsvcsprvdrcomssn) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pyeefinsvcsprvdrcomssn.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pyeefinsvcsprvdrcomssn) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 45}
}

func (x *FRMSMessage_Pyeefinsvcsprvdrcomssn) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

type FRMSMessage_DocPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PyeeRcvAmt             *FRMSMessage_Pyeercvamt             `protobuf:"bytes,1,opt,name=PyeeRcvAmt,proto3" json:"PyeeRcvAmt,omitempty"`
	PyeeFinSvcsPrvdrFee    *FRMSMessage_Pyeefinsvcsprvdrfee    `protobuf:"bytes,2,opt,name=PyeeFinSvcsPrvdrFee,proto3" json:"PyeeFinSvcsPrvdrFee,omitempty"`
	PyeeFinSvcsPrvdrComssn *FRMSMessage_Pyeefinsvcsprvdrcomssn `protobuf:"bytes,3,opt,name=PyeeFinSvcsPrvdrComssn,proto3" json:"PyeeFinSvcsPrvdrComssn,omitempty"`
}

func (x *FRMSMessage_DocPain013) Reset() {
	*x = FRMSMessage_DocPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_DocPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_DocPain013) ProtoMessage() {}

func (x *FRMSMessage_DocPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_DocPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_DocPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 46}
}

func (x *FRMSMessage_DocPain013) GetPyeeRcvAmt() *FRMSMessage_Pyeercvamt {
	if x != nil {
		return x.PyeeRcvAmt
	}
	return nil
}

func (x *FRMSMessage_DocPain013) GetPyeeFinSvcsPrvdrFee() *FRMSMessage_Pyeefinsvcsprvdrfee {
	if x != nil {
		return x.PyeeFinSvcsPrvdrFee
	}
	return nil
}

func (x *FRMSMessage_DocPain013) GetPyeeFinSvcsPrvdrComssn() *FRMSMessage_Pyeefinsvcsprvdrcomssn {
	if x != nil {
		return x.PyeeFinSvcsPrvdrComssn
	}
	return nil
}

type FRMSMessage_EnvlpPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *FRMSMessage_DocPain013 `protobuf:"bytes,1,opt,name=Doc,proto3" json:"Doc,omitempty"`
}

func (x *FRMSMessage_EnvlpPain013) Reset() {
	*x = FRMSMessage_EnvlpPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_EnvlpPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_EnvlpPain013) ProtoMessage() {}

func (x *FRMSMessage_EnvlpPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_EnvlpPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_EnvlpPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 47}
}

func (x *FRMSMessage_EnvlpPain013) GetDoc() *FRMSMessage_DocPain013 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type FRMSMessage_SplmtrydataPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envlp *FRMSMessage_EnvlpPain013 `protobuf:"bytes,1,opt,name=Envlp,proto3" json:"Envlp,omitempty"`
}

func (x *FRMSMessage_SplmtrydataPain013) Reset() {
	*x = FRMSMessage_SplmtrydataPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_SplmtrydataPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_SplmtrydataPain013) ProtoMessage() {}

func (x *FRMSMessage_SplmtrydataPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_SplmtrydataPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_SplmtrydataPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 48}
}

func (x *FRMSMessage_SplmtrydataPain013) GetEnvlp() *FRMSMessage_EnvlpPain013 {
	if x != nil {
		return x.Envlp
	}
	return nil
}

type FRMSMessage_CdttrftxinfPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtId       *FRMSMessage_Pmtid              `protobuf:"bytes,1,opt,name=PmtId,proto3" json:"PmtId,omitempty"`
	PmtTpInf    *FRMSMessage_Pmttpinf           `protobuf:"bytes,2,opt,name=PmtTpInf,proto3" json:"PmtTpInf,omitempty"`
	Amt         *FRMSMessage_Amt1               `protobuf:"bytes,3,opt,name=Amt,proto3" json:"Amt,omitempty"`
	ChrgBr      string                          `protobuf:"bytes,4,opt,name=ChrgBr,proto3" json:"ChrgBr,omitempty"`
	CdtrAgt     *FRMSMessage_Cdtragt            `protobuf:"bytes,5,opt,name=CdtrAgt,proto3" json:"CdtrAgt,omitempty"`
	Cdtr        *FRMSMessage_Cdtr               `protobuf:"bytes,6,opt,name=Cdtr,proto3" json:"Cdtr,omitempty"`
	CdtrAcct    *FRMSMessage_Cdtracct           `protobuf:"bytes,7,opt,name=CdtrAcct,proto3" json:"CdtrAcct,omitempty"`
	Purp        *FRMSMessage_Purp               `protobuf:"bytes,8,opt,name=Purp,proto3" json:"Purp,omitempty"`
	RgltryRptg  *FRMSMessage_Rgltryrptg         `protobuf:"bytes,9,opt,name=RgltryRptg,proto3" json:"RgltryRptg,omitempty"`
	SplmtryData *FRMSMessage_SplmtrydataPain013 `protobuf:"bytes,10,opt,name=SplmtryData,proto3" json:"SplmtryData,omitempty"`
}

func (x *FRMSMessage_CdttrftxinfPain013) Reset() {
	*x = FRMSMessage_CdttrftxinfPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_CdttrftxinfPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_CdttrftxinfPain013) ProtoMessage() {}

func (x *FRMSMessage_CdttrftxinfPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_CdttrftxinfPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_CdttrftxinfPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 49}
}

func (x *FRMSMessage_CdttrftxinfPain013) GetPmtId() *FRMSMessage_Pmtid {
	if x != nil {
		return x.PmtId
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetPmtTpInf() *FRMSMessage_Pmttpinf {
	if x != nil {
		return x.PmtTpInf
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetAmt() *FRMSMessage_Amt1 {
	if x != nil {
		return x.Amt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetChrgBr() string {
	if x != nil {
		return x.ChrgBr
	}
	return ""
}

func (x *FRMSMessage_CdttrftxinfPain013) GetCdtrAgt() *FRMSMessage_Cdtragt {
	if x != nil {
		return x.CdtrAgt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetCdtr() *FRMSMessage_Cdtr {
	if x != nil {
		return x.Cdtr
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetCdtrAcct() *FRMSMessage_Cdtracct {
	if x != nil {
		return x.CdtrAcct
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetPurp() *FRMSMessage_Purp {
	if x != nil {
		return x.Purp
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetRgltryRptg() *FRMSMessage_Rgltryrptg {
	if x != nil {
		return x.RgltryRptg
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPain013) GetSplmtryData() *FRMSMessage_SplmtrydataPain013 {
	if x != nil {
		return x.SplmtryData
	}
	return nil
}

type FRMSMessage_PmtinfPain013 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtInfId    string                          `protobuf:"bytes,1,opt,name=PmtInfId,proto3" json:"PmtInfId,omitempty"`
	PmtMtd      string                          `protobuf:"bytes,2,opt,name=PmtMtd,proto3" json:"PmtMtd,omitempty"`
	ReqdAdvcTp  *FRMSMessage_Reqdadvctp         `protobuf:"bytes,3,opt,name=ReqdAdvcTp,proto3" json:"ReqdAdvcTp,omitempty"`
	ReqdExctnDt *FRMSMessage_Reqdexctndt        `protobuf:"bytes,4,opt,name=ReqdExctnDt,proto3" json:"ReqdExctnDt,omitempty"`
	XpryDt      *FRMSMessage_Reqdexctndt        `protobuf:"bytes,5,opt,name=XpryDt,proto3" json:"XpryDt,omitempty"`
	Dbtr        *FRMSMessage_Dbtr               `protobuf:"bytes,6,opt,name=Dbtr,proto3" json:"Dbtr,omitempty"`
	DbtrAcct    *FRMSMessage_Dbtracct           `protobuf:"bytes,7,opt,name=DbtrAcct,proto3" json:"DbtrAcct,omitempty"`
	DbtrAgt     *FRMSMessage_Dbtragt            `protobuf:"bytes,8,opt,name=DbtrAgt,proto3" json:"DbtrAgt,omitempty"`
	CdtTrfTxInf *FRMSMessage_CdttrftxinfPain013 `protobuf:"bytes,9,opt,name=CdtTrfTxInf,proto3" json:"CdtTrfTxInf,omitempty"`
}

func (x *FRMSMessage_PmtinfPain013) Reset() {
	*x = FRMSMessage_PmtinfPain013{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_PmtinfPain013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_PmtinfPain013) ProtoMessage() {}

func (x *FRMSMessage_PmtinfPain013) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_PmtinfPain013.ProtoReflect.Descriptor instead.
func (*FRMSMessage_PmtinfPain013) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 50}
}

func (x *FRMSMessage_PmtinfPain013) GetPmtInfId() string {
	if x != nil {
		return x.PmtInfId
	}
	return ""
}

func (x *FRMSMessage_PmtinfPain013) GetPmtMtd() string {
	if x != nil {
		return x.PmtMtd
	}
	return ""
}

func (x *FRMSMessage_PmtinfPain013) GetReqdAdvcTp() *FRMSMessage_Reqdadvctp {
	if x != nil {
		return x.ReqdAdvcTp
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetReqdExctnDt() *FRMSMessage_Reqdexctndt {
	if x != nil {
		return x.ReqdExctnDt
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetXpryDt() *FRMSMessage_Reqdexctndt {
	if x != nil {
		return x.XpryDt
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetDbtr() *FRMSMessage_Dbtr {
	if x != nil {
		return x.Dbtr
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetDbtrAcct() *FRMSMessage_Dbtracct {
	if x != nil {
		return x.DbtrAcct
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetDbtrAgt() *FRMSMessage_Dbtragt {
	if x != nil {
		return x.DbtrAgt
	}
	return nil
}

func (x *FRMSMessage_PmtinfPain013) GetCdtTrfTxInf() *FRMSMessage_CdttrftxinfPain013 {
	if x != nil {
		return x.CdtTrfTxInf
	}
	return nil
}

type FRMSMessage_Cdtrpmtactvtnreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpHdr      *FRMSMessage_GrphdrPain013 `protobuf:"bytes,1,opt,name=GrpHdr,proto3" json:"GrpHdr,omitempty"`
	PmtInf      *FRMSMessage_PmtinfPain013 `protobuf:"bytes,2,opt,name=PmtInf,proto3" json:"PmtInf,omitempty"`
	SplmtryData *FRMSMessage_Splmtrydata1  `protobuf:"bytes,3,opt,name=SplmtryData,proto3" json:"SplmtryData,omitempty"`
}

func (x *FRMSMessage_Cdtrpmtactvtnreq) Reset() {
	*x = FRMSMessage_Cdtrpmtactvtnreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Cdtrpmtactvtnreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Cdtrpmtactvtnreq) ProtoMessage() {}

func (x *FRMSMessage_Cdtrpmtactvtnreq) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Cdtrpmtactvtnreq.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Cdtrpmtactvtnreq) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 51}
}

func (x *FRMSMessage_Cdtrpmtactvtnreq) GetGrpHdr() *FRMSMessage_GrphdrPain013 {
	if x != nil {
		return x.GrpHdr
	}
	return nil
}

func (x *FRMSMessage_Cdtrpmtactvtnreq) GetPmtInf() *FRMSMessage_PmtinfPain013 {
	if x != nil {
		return x.PmtInf
	}
	return nil
}

func (x *FRMSMessage_Cdtrpmtactvtnreq) GetSplmtryData() *FRMSMessage_Splmtrydata1 {
	if x != nil {
		return x.SplmtryData
	}
	return nil
}

// Pacs002
type FRMSMessage_Grphdr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId   string `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	CreDtTm string `protobuf:"bytes,2,opt,name=CreDtTm,proto3" json:"CreDtTm,omitempty"`
}

func (x *FRMSMessage_Grphdr) Reset() {
	*x = FRMSMessage_Grphdr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Grphdr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Grphdr) ProtoMessage() {}

func (x *FRMSMessage_Grphdr) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Grphdr.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Grphdr) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 52}
}

func (x *FRMSMessage_Grphdr) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *FRMSMessage_Grphdr) GetCreDtTm() string {
	if x != nil {
		return x.CreDtTm
	}
	return ""
}

type FRMSMessage_Agt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinInstnId *FRMSMessage_Fininstnid `protobuf:"bytes,1,opt,name=FinInstnId,proto3" json:"FinInstnId,omitempty"`
}

func (x *FRMSMessage_Agt) Reset() {
	*x = FRMSMessage_Agt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Agt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Agt) ProtoMessage() {}

func (x *FRMSMessage_Agt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Agt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Agt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 53}
}

func (x *FRMSMessage_Agt) GetFinInstnId() *FRMSMessage_Fininstnid {
	if x != nil {
		return x.FinInstnId
	}
	return nil
}

type FRMSMessage_Chrgsinf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
	Agt *FRMSMessage_Agt `protobuf:"bytes,2,opt,name=Agt,proto3" json:"Agt,omitempty"`
}

func (x *FRMSMessage_Chrgsinf) Reset() {
	*x = FRMSMessage_Chrgsinf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Chrgsinf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Chrgsinf) ProtoMessage() {}

func (x *FRMSMessage_Chrgsinf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Chrgsinf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Chrgsinf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 54}
}

func (x *FRMSMessage_Chrgsinf) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

func (x *FRMSMessage_Chrgsinf) GetAgt() *FRMSMessage_Agt {
	if x != nil {
		return x.Agt
	}
	return nil
}

type FRMSMessage_Instgagt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinInstnId *FRMSMessage_Fininstnid `protobuf:"bytes,1,opt,name=FinInstnId,proto3" json:"FinInstnId,omitempty"`
}

func (x *FRMSMessage_Instgagt) Reset() {
	*x = FRMSMessage_Instgagt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Instgagt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Instgagt) ProtoMessage() {}

func (x *FRMSMessage_Instgagt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Instgagt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Instgagt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 55}
}

func (x *FRMSMessage_Instgagt) GetFinInstnId() *FRMSMessage_Fininstnid {
	if x != nil {
		return x.FinInstnId
	}
	return nil
}

type FRMSMessage_Instdagt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinInstnId *FRMSMessage_Fininstnid `protobuf:"bytes,1,opt,name=FinInstnId,proto3" json:"FinInstnId,omitempty"`
}

func (x *FRMSMessage_Instdagt) Reset() {
	*x = FRMSMessage_Instdagt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Instdagt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Instdagt) ProtoMessage() {}

func (x *FRMSMessage_Instdagt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Instdagt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Instdagt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 56}
}

func (x *FRMSMessage_Instdagt) GetFinInstnId() *FRMSMessage_Fininstnid {
	if x != nil {
		return x.FinInstnId
	}
	return nil
}

type FRMSMessage_Txinfandsts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgnlInstrId    string                  `protobuf:"bytes,1,opt,name=OrgnlInstrId,proto3" json:"OrgnlInstrId,omitempty"`
	OrgnlEndToEndId string                  `protobuf:"bytes,2,opt,name=OrgnlEndToEndId,proto3" json:"OrgnlEndToEndId,omitempty"`
	TxSts           string                  `protobuf:"bytes,3,opt,name=TxSts,proto3" json:"TxSts,omitempty"`
	ChrgsInf        []*FRMSMessage_Chrgsinf `protobuf:"bytes,4,rep,name=ChrgsInf,proto3" json:"ChrgsInf,omitempty"`
	AccptncDtTm     string                  `protobuf:"bytes,5,opt,name=AccptncDtTm,proto3" json:"AccptncDtTm,omitempty"`
	InstgAgt        *FRMSMessage_Instgagt   `protobuf:"bytes,6,opt,name=InstgAgt,proto3" json:"InstgAgt,omitempty"`
	InstdAgt        *FRMSMessage_Instdagt   `protobuf:"bytes,7,opt,name=InstdAgt,proto3" json:"InstdAgt,omitempty"`
}

func (x *FRMSMessage_Txinfandsts) Reset() {
	*x = FRMSMessage_Txinfandsts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Txinfandsts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Txinfandsts) ProtoMessage() {}

func (x *FRMSMessage_Txinfandsts) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Txinfandsts.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Txinfandsts) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 57}
}

func (x *FRMSMessage_Txinfandsts) GetOrgnlInstrId() string {
	if x != nil {
		return x.OrgnlInstrId
	}
	return ""
}

func (x *FRMSMessage_Txinfandsts) GetOrgnlEndToEndId() string {
	if x != nil {
		return x.OrgnlEndToEndId
	}
	return ""
}

func (x *FRMSMessage_Txinfandsts) GetTxSts() string {
	if x != nil {
		return x.TxSts
	}
	return ""
}

func (x *FRMSMessage_Txinfandsts) GetChrgsInf() []*FRMSMessage_Chrgsinf {
	if x != nil {
		return x.ChrgsInf
	}
	return nil
}

func (x *FRMSMessage_Txinfandsts) GetAccptncDtTm() string {
	if x != nil {
		return x.AccptncDtTm
	}
	return ""
}

func (x *FRMSMessage_Txinfandsts) GetInstgAgt() *FRMSMessage_Instgagt {
	if x != nil {
		return x.InstgAgt
	}
	return nil
}

func (x *FRMSMessage_Txinfandsts) GetInstdAgt() *FRMSMessage_Instdagt {
	if x != nil {
		return x.InstdAgt
	}
	return nil
}

type FRMSMessage_Fitofipmtsts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpHdr      *FRMSMessage_Grphdr      `protobuf:"bytes,1,opt,name=GrpHdr,proto3" json:"GrpHdr,omitempty"`
	TxInfAndSts *FRMSMessage_Txinfandsts `protobuf:"bytes,2,opt,name=TxInfAndSts,proto3" json:"TxInfAndSts,omitempty"`
}

func (x *FRMSMessage_Fitofipmtsts) Reset() {
	*x = FRMSMessage_Fitofipmtsts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Fitofipmtsts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Fitofipmtsts) ProtoMessage() {}

func (x *FRMSMessage_Fitofipmtsts) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Fitofipmtsts.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Fitofipmtsts) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 58}
}

func (x *FRMSMessage_Fitofipmtsts) GetGrpHdr() *FRMSMessage_Grphdr {
	if x != nil {
		return x.GrpHdr
	}
	return nil
}

func (x *FRMSMessage_Fitofipmtsts) GetTxInfAndSts() *FRMSMessage_Txinfandsts {
	if x != nil {
		return x.TxInfAndSts
	}
	return nil
}

// Report
type FRMSMessage_Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxTp         string                    `protobuf:"bytes,1,opt,name=TxTp,proto3" json:"TxTp,omitempty"`
	FIToFIPmtSts *FRMSMessage_Fitofipmtsts `protobuf:"bytes,2,opt,name=FIToFIPmtSts,proto3" json:"FIToFIPmtSts,omitempty"`
}

func (x *FRMSMessage_Transaction) Reset() {
	*x = FRMSMessage_Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Transaction) ProtoMessage() {}

func (x *FRMSMessage_Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Transaction.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Transaction) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 59}
}

func (x *FRMSMessage_Transaction) GetTxTp() string {
	if x != nil {
		return x.TxTp
	}
	return ""
}

func (x *FRMSMessage_Transaction) GetFIToFIPmtSts() *FRMSMessage_Fitofipmtsts {
	if x != nil {
		return x.FIToFIPmtSts
	}
	return nil
}

type FRMSMessage_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cfg  string `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
}

func (x *FRMSMessage_Rules) Reset() {
	*x = FRMSMessage_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Rules) ProtoMessage() {}

func (x *FRMSMessage_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Rules.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Rules) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 60}
}

func (x *FRMSMessage_Rules) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Rules) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FRMSMessage_Rules) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

type FRMSMessage_Typologies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host  string               `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cfg   string               `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Rules []*FRMSMessage_Rules `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *FRMSMessage_Typologies) Reset() {
	*x = FRMSMessage_Typologies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Typologies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Typologies) ProtoMessage() {}

func (x *FRMSMessage_Typologies) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Typologies.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Typologies) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 61}
}

func (x *FRMSMessage_Typologies) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Typologies) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FRMSMessage_Typologies) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Typologies) GetRules() []*FRMSMessage_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type FRMSMessage_Channels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host       string                    `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cfg        string                    `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Typologies []*FRMSMessage_Typologies `protobuf:"bytes,4,rep,name=typologies,proto3" json:"typologies,omitempty"`
}

func (x *FRMSMessage_Channels) Reset() {
	*x = FRMSMessage_Channels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Channels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Channels) ProtoMessage() {}

func (x *FRMSMessage_Channels) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Channels.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Channels) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 62}
}

func (x *FRMSMessage_Channels) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Channels) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FRMSMessage_Channels) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Channels) GetTypologies() []*FRMSMessage_Typologies {
	if x != nil {
		return x.Typologies
	}
	return nil
}

type FRMSMessage_Messages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host     string                  `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cfg      string                  `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
	TxTp     string                  `protobuf:"bytes,4,opt,name=txTp,proto3" json:"txTp,omitempty"`
	Channels []*FRMSMessage_Channels `protobuf:"bytes,5,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *FRMSMessage_Messages) Reset() {
	*x = FRMSMessage_Messages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Messages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Messages) ProtoMessage() {}

func (x *FRMSMessage_Messages) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Messages.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Messages) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 63}
}

func (x *FRMSMessage_Messages) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Messages) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FRMSMessage_Messages) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Messages) GetTxTp() string {
	if x != nil {
		return x.TxTp
	}
	return ""
}

func (x *FRMSMessage_Messages) GetChannels() []*FRMSMessage_Channels {
	if x != nil {
		return x.Channels
	}
	return nil
}

type FRMSMessage_Networkmap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active   bool                    `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Cfg      string                  `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Messages []*FRMSMessage_Messages `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *FRMSMessage_Networkmap) Reset() {
	*x = FRMSMessage_Networkmap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Networkmap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Networkmap) ProtoMessage() {}

func (x *FRMSMessage_Networkmap) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Networkmap.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Networkmap) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 64}
}

func (x *FRMSMessage_Networkmap) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FRMSMessage_Networkmap) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Networkmap) GetMessages() []*FRMSMessage_Messages {
	if x != nil {
		return x.Messages
	}
	return nil
}

type FRMSMessage_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrcgTmDP    uint32 `protobuf:"varint,1,opt,name=prcgTmDP,proto3" json:"prcgTmDP,omitempty"`
	TraceParent string `protobuf:"bytes,2,opt,name=traceParent,proto3" json:"traceParent,omitempty"`
	PrcgTmCRSP  uint32 `protobuf:"varint,3,opt,name=prcgTmCRSP,proto3" json:"prcgTmCRSP,omitempty"`
}

func (x *FRMSMessage_Metadata) Reset() {
	*x = FRMSMessage_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Metadata) ProtoMessage() {}

func (x *FRMSMessage_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Metadata.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Metadata) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 65}
}

func (x *FRMSMessage_Metadata) GetPrcgTmDP() uint32 {
	if x != nil {
		return x.PrcgTmDP
	}
	return 0
}

func (x *FRMSMessage_Metadata) GetTraceParent() string {
	if x != nil {
		return x.TraceParent
	}
	return ""
}

func (x *FRMSMessage_Metadata) GetPrcgTmCRSP() uint32 {
	if x != nil {
		return x.PrcgTmCRSP
	}
	return 0
}

type FRMSMessage_Ruleresults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cfg        string `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	SubRuleRef string `protobuf:"bytes,3,opt,name=subRuleRef,proto3" json:"subRuleRef,omitempty"`
	Result     bool   `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
	Reason     string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Desc       string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	PrcgTm     uint32 `protobuf:"varint,7,opt,name=prcgTm,proto3" json:"prcgTm,omitempty"`
	Wght       uint32 `protobuf:"varint,8,opt,name=wght,proto3" json:"wght,omitempty"`
}

func (x *FRMSMessage_Ruleresults) Reset() {
	*x = FRMSMessage_Ruleresults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Ruleresults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Ruleresults) ProtoMessage() {}

func (x *FRMSMessage_Ruleresults) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Ruleresults.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Ruleresults) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 66}
}

func (x *FRMSMessage_Ruleresults) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Ruleresults) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Ruleresults) GetSubRuleRef() string {
	if x != nil {
		return x.SubRuleRef
	}
	return ""
}

func (x *FRMSMessage_Ruleresults) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *FRMSMessage_Ruleresults) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FRMSMessage_Ruleresults) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FRMSMessage_Ruleresults) GetPrcgTm() uint32 {
	if x != nil {
		return x.PrcgTm
	}
	return 0
}

func (x *FRMSMessage_Ruleresults) GetWght() uint32 {
	if x != nil {
		return x.Wght
	}
	return 0
}

type FRMSMessage_Typologyresult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cfg         string                     `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Desc        string                     `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Result      uint32                     `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
	Threshold   uint32                     `protobuf:"varint,5,opt,name=threshold,proto3" json:"threshold,omitempty"`
	RuleResults []*FRMSMessage_Ruleresults `protobuf:"bytes,6,rep,name=ruleResults,proto3" json:"ruleResults,omitempty"`
	PrcgTm      uint32                     `protobuf:"varint,7,opt,name=prcgTm,proto3" json:"prcgTm,omitempty"`
	Review      bool                       `protobuf:"varint,8,opt,name=review,proto3" json:"review,omitempty"`
	Workflow    *FRMSMessageWorkflow       `protobuf:"bytes,9,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *FRMSMessage_Typologyresult) Reset() {
	*x = FRMSMessage_Typologyresult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Typologyresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Typologyresult) ProtoMessage() {}

func (x *FRMSMessage_Typologyresult) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Typologyresult.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Typologyresult) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 67}
}

func (x *FRMSMessage_Typologyresult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Typologyresult) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Typologyresult) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FRMSMessage_Typologyresult) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *FRMSMessage_Typologyresult) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *FRMSMessage_Typologyresult) GetRuleResults() []*FRMSMessage_Ruleresults {
	if x != nil {
		return x.RuleResults
	}
	return nil
}

func (x *FRMSMessage_Typologyresult) GetPrcgTm() uint32 {
	if x != nil {
		return x.PrcgTm
	}
	return 0
}

func (x *FRMSMessage_Typologyresult) GetReview() bool {
	if x != nil {
		return x.Review
	}
	return false
}

func (x *FRMSMessage_Typologyresult) GetWorkflow() *FRMSMessageWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type FRMSMessage_Channelresult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cfg            string                        `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	PrcgTm         uint32                        `protobuf:"varint,3,opt,name=prcgTm,proto3" json:"prcgTm,omitempty"`
	Status         string                        `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Result         uint32                        `protobuf:"varint,5,opt,name=result,proto3" json:"result,omitempty"`
	TypologyResult []*FRMSMessage_Typologyresult `protobuf:"bytes,6,rep,name=typologyResult,proto3" json:"typologyResult,omitempty"`
}

func (x *FRMSMessage_Channelresult) Reset() {
	*x = FRMSMessage_Channelresult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Channelresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Channelresult) ProtoMessage() {}

func (x *FRMSMessage_Channelresult) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Channelresult.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Channelresult) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 68}
}

func (x *FRMSMessage_Channelresult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Channelresult) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Channelresult) GetPrcgTm() uint32 {
	if x != nil {
		return x.PrcgTm
	}
	return 0
}

func (x *FRMSMessage_Channelresult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FRMSMessage_Channelresult) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *FRMSMessage_Channelresult) GetTypologyResult() []*FRMSMessage_Typologyresult {
	if x != nil {
		return x.TypologyResult
	}
	return nil
}

type FRMSMessageWorkflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertThreshold        uint32 `protobuf:"varint,1,opt,name=alertThreshold,proto3" json:"alertThreshold,omitempty"`
	InterdictionThreshold uint32 `protobuf:"varint,2,opt,name=interdictionThreshold,proto3" json:"interdictionThreshold,omitempty"`
}

func (x *FRMSMessageWorkflow) Reset() {
	*x = FRMSMessageWorkflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessageWorkflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessageWorkflow) ProtoMessage() {}

func (x *FRMSMessageWorkflow) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessageWorkflow.ProtoReflect.Descriptor instead.
func (*FRMSMessageWorkflow) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 69}
}

func (x *FRMSMessageWorkflow) GetAlertThreshold() uint32 {
	if x != nil {
		return x.AlertThreshold
	}
	return 0
}

func (x *FRMSMessageWorkflow) GetInterdictionThreshold() uint32 {
	if x != nil {
		return x.InterdictionThreshold
	}
	return 0
}

type FRMSMessage_Tadpresult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cfg           string                       `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	ChannelResult []*FRMSMessage_Channelresult `protobuf:"bytes,3,rep,name=channelResult,proto3" json:"channelResult,omitempty"`
	PrcgTm        uint32                       `protobuf:"varint,4,opt,name=prcgTm,proto3" json:"prcgTm,omitempty"`
}

func (x *FRMSMessage_Tadpresult) Reset() {
	*x = FRMSMessage_Tadpresult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Tadpresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Tadpresult) ProtoMessage() {}

func (x *FRMSMessage_Tadpresult) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Tadpresult.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Tadpresult) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 70}
}

func (x *FRMSMessage_Tadpresult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FRMSMessage_Tadpresult) GetCfg() string {
	if x != nil {
		return x.Cfg
	}
	return ""
}

func (x *FRMSMessage_Tadpresult) GetChannelResult() []*FRMSMessage_Channelresult {
	if x != nil {
		return x.ChannelResult
	}
	return nil
}

func (x *FRMSMessage_Tadpresult) GetPrcgTm() uint32 {
	if x != nil {
		return x.PrcgTm
	}
	return 0
}

type FRMSMessage_Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvaluationID string                  `protobuf:"bytes,1,opt,name=evaluationID,proto3" json:"evaluationID,omitempty"`
	MetaData     *FRMSMessage_Metadata   `protobuf:"bytes,2,opt,name=metaData,proto3" json:"metaData,omitempty"`
	Status       string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TadpResult   *FRMSMessage_Tadpresult `protobuf:"bytes,6,opt,name=tadpResult,proto3" json:"tadpResult,omitempty"`
}

func (x *FRMSMessage_Report) Reset() {
	*x = FRMSMessage_Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Report) ProtoMessage() {}

func (x *FRMSMessage_Report) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Report.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Report) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 71}
}

func (x *FRMSMessage_Report) GetEvaluationID() string {
	if x != nil {
		return x.EvaluationID
	}
	return ""
}

func (x *FRMSMessage_Report) GetMetaData() *FRMSMessage_Metadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *FRMSMessage_Report) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FRMSMessage_Report) GetTadpResult() *FRMSMessage_Tadpresult {
	if x != nil {
		return x.TadpResult
	}
	return nil
}

// Pacs008
type FRMSMessage_Sttlminf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SttlmMtd string `protobuf:"bytes,1,opt,name=SttlmMtd,proto3" json:"SttlmMtd,omitempty"`
}

func (x *FRMSMessage_Sttlminf) Reset() {
	*x = FRMSMessage_Sttlminf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Sttlminf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Sttlminf) ProtoMessage() {}

func (x *FRMSMessage_Sttlminf) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Sttlminf.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Sttlminf) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 72}
}

func (x *FRMSMessage_Sttlminf) GetSttlmMtd() string {
	if x != nil {
		return x.SttlmMtd
	}
	return ""
}

type FRMSMessage_GrphdrPacs008 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string                `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	CreDtTm  string                `protobuf:"bytes,2,opt,name=CreDtTm,proto3" json:"CreDtTm,omitempty"`
	NbOfTxs  uint32                `protobuf:"varint,3,opt,name=NbOfTxs,proto3" json:"NbOfTxs,omitempty"`
	SttlmInf *FRMSMessage_Sttlminf `protobuf:"bytes,4,opt,name=SttlmInf,proto3" json:"SttlmInf,omitempty"`
}

func (x *FRMSMessage_GrphdrPacs008) Reset() {
	*x = FRMSMessage_GrphdrPacs008{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_GrphdrPacs008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_GrphdrPacs008) ProtoMessage() {}

func (x *FRMSMessage_GrphdrPacs008) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_GrphdrPacs008.ProtoReflect.Descriptor instead.
func (*FRMSMessage_GrphdrPacs008) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 73}
}

func (x *FRMSMessage_GrphdrPacs008) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *FRMSMessage_GrphdrPacs008) GetCreDtTm() string {
	if x != nil {
		return x.CreDtTm
	}
	return ""
}

func (x *FRMSMessage_GrphdrPacs008) GetNbOfTxs() uint32 {
	if x != nil {
		return x.NbOfTxs
	}
	return 0
}

func (x *FRMSMessage_GrphdrPacs008) GetSttlmInf() *FRMSMessage_Sttlminf {
	if x != nil {
		return x.SttlmInf
	}
	return nil
}

type FRMSMessage_Pmtid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrId    *string `protobuf:"bytes,1,opt,name=InstrId,proto3,oneof" json:"InstrId,omitempty"`
	EndToEndId string  `protobuf:"bytes,2,opt,name=EndToEndId,proto3" json:"EndToEndId,omitempty"`
}

func (x *FRMSMessage_Pmtid) Reset() {
	*x = FRMSMessage_Pmtid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Pmtid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Pmtid) ProtoMessage() {}

func (x *FRMSMessage_Pmtid) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Pmtid.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Pmtid) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 74}
}

func (x *FRMSMessage_Pmtid) GetInstrId() string {
	if x != nil && x.InstrId != nil {
		return *x.InstrId
	}
	return ""
}

func (x *FRMSMessage_Pmtid) GetEndToEndId() string {
	if x != nil {
		return x.EndToEndId
	}
	return ""
}

type FRMSMessage_Intrbksttlmamt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt *FRMSMessage_Amt `protobuf:"bytes,1,opt,name=Amt,proto3" json:"Amt,omitempty"`
}

func (x *FRMSMessage_Intrbksttlmamt) Reset() {
	*x = FRMSMessage_Intrbksttlmamt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Intrbksttlmamt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Intrbksttlmamt) ProtoMessage() {}

func (x *FRMSMessage_Intrbksttlmamt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Intrbksttlmamt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Intrbksttlmamt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 75}
}

func (x *FRMSMessage_Intrbksttlmamt) GetAmt() *FRMSMessage_Amt {
	if x != nil {
		return x.Amt
	}
	return nil
}

type FRMSMessage_CdttrftxinfPacs008 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtId          *FRMSMessage_Pmtid          `protobuf:"bytes,1,opt,name=PmtId,proto3" json:"PmtId,omitempty"`
	IntrBkSttlmAmt *FRMSMessage_Intrbksttlmamt `protobuf:"bytes,2,opt,name=IntrBkSttlmAmt,proto3" json:"IntrBkSttlmAmt,omitempty"`
	InstdAmt       *FRMSMessage_Instdamt       `protobuf:"bytes,3,opt,name=InstdAmt,proto3" json:"InstdAmt,omitempty"`
	ChrgBr         string                      `protobuf:"bytes,4,opt,name=ChrgBr,proto3" json:"ChrgBr,omitempty"`
	ChrgsInf       *FRMSMessage_Chrgsinf       `protobuf:"bytes,5,opt,name=ChrgsInf,proto3" json:"ChrgsInf,omitempty"`
	InitgPty       *FRMSMessage_Initgpty       `protobuf:"bytes,6,opt,name=InitgPty,proto3" json:"InitgPty,omitempty"`
	Dbtr           *FRMSMessage_Dbtr           `protobuf:"bytes,7,opt,name=Dbtr,proto3" json:"Dbtr,omitempty"`
	DbtrAcct       *FRMSMessage_Dbtracct       `protobuf:"bytes,8,opt,name=DbtrAcct,proto3" json:"DbtrAcct,omitempty"`
	DbtrAgt        *FRMSMessage_Dbtragt        `protobuf:"bytes,9,opt,name=DbtrAgt,proto3" json:"DbtrAgt,omitempty"`
	CdtrAgt        *FRMSMessage_Cdtragt        `protobuf:"bytes,10,opt,name=CdtrAgt,proto3" json:"CdtrAgt,omitempty"`
	Cdtr           *FRMSMessage_Cdtr           `protobuf:"bytes,11,opt,name=Cdtr,proto3" json:"Cdtr,omitempty"`
	CdtrAcct       *FRMSMessage_Cdtracct       `protobuf:"bytes,12,opt,name=CdtrAcct,proto3" json:"CdtrAcct,omitempty"`
	Purp           *FRMSMessage_Purp           `protobuf:"bytes,13,opt,name=Purp,proto3" json:"Purp,omitempty"`
}

func (x *FRMSMessage_CdttrftxinfPacs008) Reset() {
	*x = FRMSMessage_CdttrftxinfPacs008{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_CdttrftxinfPacs008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_CdttrftxinfPacs008) ProtoMessage() {}

func (x *FRMSMessage_CdttrftxinfPacs008) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_CdttrftxinfPacs008.ProtoReflect.Descriptor instead.
func (*FRMSMessage_CdttrftxinfPacs008) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 76}
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetPmtId() *FRMSMessage_Pmtid {
	if x != nil {
		return x.PmtId
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetIntrBkSttlmAmt() *FRMSMessage_Intrbksttlmamt {
	if x != nil {
		return x.IntrBkSttlmAmt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetInstdAmt() *FRMSMessage_Instdamt {
	if x != nil {
		return x.InstdAmt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetChrgBr() string {
	if x != nil {
		return x.ChrgBr
	}
	return ""
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetChrgsInf() *FRMSMessage_Chrgsinf {
	if x != nil {
		return x.ChrgsInf
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetInitgPty() *FRMSMessage_Initgpty {
	if x != nil {
		return x.InitgPty
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetDbtr() *FRMSMessage_Dbtr {
	if x != nil {
		return x.Dbtr
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetDbtrAcct() *FRMSMessage_Dbtracct {
	if x != nil {
		return x.DbtrAcct
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetDbtrAgt() *FRMSMessage_Dbtragt {
	if x != nil {
		return x.DbtrAgt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetCdtrAgt() *FRMSMessage_Cdtragt {
	if x != nil {
		return x.CdtrAgt
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetCdtr() *FRMSMessage_Cdtr {
	if x != nil {
		return x.Cdtr
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetCdtrAcct() *FRMSMessage_Cdtracct {
	if x != nil {
		return x.CdtrAcct
	}
	return nil
}

func (x *FRMSMessage_CdttrftxinfPacs008) GetPurp() *FRMSMessage_Purp {
	if x != nil {
		return x.Purp
	}
	return nil
}

type FRMSMessage_Doc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xprtn    string                 `protobuf:"bytes,1,opt,name=Xprtn,proto3" json:"Xprtn,omitempty"`
	InitgPty *FRMSMessage_Initgpty1 `protobuf:"bytes,2,opt,name=InitgPty,proto3" json:"InitgPty,omitempty"`
}

func (x *FRMSMessage_Doc) Reset() {
	*x = FRMSMessage_Doc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Doc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Doc) ProtoMessage() {}

func (x *FRMSMessage_Doc) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Doc.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Doc) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 77}
}

func (x *FRMSMessage_Doc) GetXprtn() string {
	if x != nil {
		return x.Xprtn
	}
	return ""
}

func (x *FRMSMessage_Doc) GetInitgPty() *FRMSMessage_Initgpty1 {
	if x != nil {
		return x.InitgPty
	}
	return nil
}

type FRMSMessage_Envlp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *FRMSMessage_Doc `protobuf:"bytes,1,opt,name=Doc,proto3" json:"Doc,omitempty"`
}

func (x *FRMSMessage_Envlp) Reset() {
	*x = FRMSMessage_Envlp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Envlp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Envlp) ProtoMessage() {}

func (x *FRMSMessage_Envlp) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Envlp.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Envlp) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 78}
}

func (x *FRMSMessage_Envlp) GetDoc() *FRMSMessage_Doc {
	if x != nil {
		return x.Doc
	}
	return nil
}

type FRMSMessage_Splmtrydata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envlp *FRMSMessage_Envlp `protobuf:"bytes,1,opt,name=Envlp,proto3" json:"Envlp,omitempty"`
}

func (x *FRMSMessage_Splmtrydata) Reset() {
	*x = FRMSMessage_Splmtrydata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Splmtrydata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Splmtrydata) ProtoMessage() {}

func (x *FRMSMessage_Splmtrydata) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Splmtrydata.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Splmtrydata) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 79}
}

func (x *FRMSMessage_Splmtrydata) GetEnvlp() *FRMSMessage_Envlp {
	if x != nil {
		return x.Envlp
	}
	return nil
}

type FRMSMessage_Fitoficstmrcdt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpHdr      *FRMSMessage_GrphdrPacs008      `protobuf:"bytes,1,opt,name=GrpHdr,proto3" json:"GrpHdr,omitempty"`
	CdtTrfTxInf *FRMSMessage_CdttrftxinfPacs008 `protobuf:"bytes,2,opt,name=CdtTrfTxInf,proto3" json:"CdtTrfTxInf,omitempty"`
	RgltryRptg  *FRMSMessage_Rgltryrptg         `protobuf:"bytes,3,opt,name=RgltryRptg,proto3" json:"RgltryRptg,omitempty"`
	RmtInf      *FRMSMessage_Rmtinf             `protobuf:"bytes,4,opt,name=RmtInf,proto3" json:"RmtInf,omitempty"`
	SplmtryData *FRMSMessage_Splmtrydata        `protobuf:"bytes,5,opt,name=SplmtryData,proto3" json:"SplmtryData,omitempty"`
}

func (x *FRMSMessage_Fitoficstmrcdt) Reset() {
	*x = FRMSMessage_Fitoficstmrcdt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessage_Fitoficstmrcdt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessage_Fitoficstmrcdt) ProtoMessage() {}

func (x *FRMSMessage_Fitoficstmrcdt) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessage_Fitoficstmrcdt.ProtoReflect.Descriptor instead.
func (*FRMSMessage_Fitoficstmrcdt) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 80}
}

func (x *FRMSMessage_Fitoficstmrcdt) GetGrpHdr() *FRMSMessage_GrphdrPacs008 {
	if x != nil {
		return x.GrpHdr
	}
	return nil
}

func (x *FRMSMessage_Fitoficstmrcdt) GetCdtTrfTxInf() *FRMSMessage_CdttrftxinfPacs008 {
	if x != nil {
		return x.CdtTrfTxInf
	}
	return nil
}

func (x *FRMSMessage_Fitoficstmrcdt) GetRgltryRptg() *FRMSMessage_Rgltryrptg {
	if x != nil {
		return x.RgltryRptg
	}
	return nil
}

func (x *FRMSMessage_Fitoficstmrcdt) GetRmtInf() *FRMSMessage_Rmtinf {
	if x != nil {
		return x.RmtInf
	}
	return nil
}

func (x *FRMSMessage_Fitoficstmrcdt) GetSplmtryData() *FRMSMessage_Splmtrydata {
	if x != nil {
		return x.SplmtryData
	}
	return nil
}

type FRMSMessageDataCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbtrId     string `protobuf:"bytes,1,opt,name=dbtrId,proto3" json:"dbtrId,omitempty"`
	CdtrId     string `protobuf:"bytes,2,opt,name=cdtrId,proto3" json:"cdtrId,omitempty"`
	CdtrAcctId string `protobuf:"bytes,3,opt,name=cdtrAcctId,proto3" json:"cdtrAcctId,omitempty"`
	DbtrAcctId string `protobuf:"bytes,4,opt,name=dbtrAcctId,proto3" json:"dbtrAcctId,omitempty"`
}

func (x *FRMSMessageDataCache) Reset() {
	*x = FRMSMessageDataCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_full_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRMSMessageDataCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRMSMessageDataCache) ProtoMessage() {}

func (x *FRMSMessageDataCache) ProtoReflect() protoreflect.Message {
	mi := &file_full_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRMSMessageDataCache.ProtoReflect.Descriptor instead.
func (*FRMSMessageDataCache) Descriptor() ([]byte, []int) {
	return file_full_proto_rawDescGZIP(), []int{0, 81}
}

func (x *FRMSMessageDataCache) GetDbtrId() string {
	if x != nil {
		return x.DbtrId
	}
	return ""
}

func (x *FRMSMessageDataCache) GetCdtrId() string {
	if x != nil {
		return x.CdtrId
	}
	return ""
}

func (x *FRMSMessageDataCache) GetCdtrAcctId() string {
	if x != nil {
		return x.CdtrAcctId
	}
	return ""
}

func (x *FRMSMessageDataCache) GetDbtrAcctId() string {
	if x != nil {
		return x.DbtrAcctId
	}
	return ""
}

var File_full_proto protoreflect.FileDescriptor

var file_full_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x53, 0x0a,
	0x0b, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x52, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x78, 0x54, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x54,
	0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x46, 0x49, 0x54, 0x6f, 0x46, 0x49, 0x50, 0x6d, 0x74, 0x53, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x74, 0x6f, 0x66, 0x69, 0x70, 0x6d, 0x74, 0x73,
	0x74, 0x73, 0x52, 0x0c, 0x46, 0x49, 0x54, 0x6f, 0x46, 0x49, 0x50, 0x6d, 0x74, 0x53, 0x74, 0x73,
	0x12, 0x43, 0x0a, 0x0e, 0x46, 0x49, 0x54, 0x6f, 0x46, 0x49, 0x43, 0x73, 0x74, 0x6d, 0x72, 0x43,
	0x64, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x74, 0x6f, 0x66, 0x69, 0x63, 0x73, 0x74,
	0x6d, 0x72, 0x63, 0x64, 0x74, 0x52, 0x0e, 0x46, 0x49, 0x54, 0x6f, 0x46, 0x49, 0x43, 0x73, 0x74,
	0x6d, 0x72, 0x43, 0x64, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x43, 0x73, 0x74, 0x6d, 0x72, 0x43, 0x64,
	0x74, 0x54, 0x72, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x73,
	0x74, 0x6d, 0x72, 0x63, 0x64, 0x74, 0x74, 0x72, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x6e, 0x52, 0x10,
	0x43, 0x73, 0x74, 0x6d, 0x72, 0x43, 0x64, 0x74, 0x54, 0x72, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x6e,
	0x12, 0x49, 0x0a, 0x10, 0x43, 0x64, 0x74, 0x72, 0x50, 0x6d, 0x74, 0x41, 0x63, 0x74, 0x76, 0x74,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x70, 0x6d, 0x74,
	0x61, 0x63, 0x74, 0x76, 0x74, 0x6e, 0x72, 0x65, 0x71, 0x52, 0x10, 0x43, 0x64, 0x74, 0x72, 0x50,
	0x6d, 0x74, 0x41, 0x63, 0x74, 0x76, 0x74, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x0e, 0x74,
	0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0e, 0x74, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x38, 0x0a, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x0a,
	0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x6e, 0x74, 0x1a, 0x6f,
	0x0a, 0x0f, 0x44, 0x74, 0x61, 0x6e, 0x64, 0x70, 0x6c, 0x63, 0x6f, 0x66, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x69, 0x74, 0x79, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x1a,
	0x29, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x1a, 0x1f, 0x0a, 0x07, 0x53, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x74, 0x72, 0x79, 0x1a, 0x46, 0x0a, 0x04, 0x4f,
	0x74, 0x68, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x63, 0x68, 0x6d, 0x65, 0x4e, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x6d, 0x52, 0x07, 0x53, 0x63, 0x68, 0x6d,
	0x65, 0x4e, 0x6d, 0x1a, 0x77, 0x0a, 0x06, 0x50, 0x72, 0x76, 0x74, 0x69, 0x64, 0x12, 0x46, 0x0a,
	0x0f, 0x44, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6c, 0x63, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x74, 0x61, 0x6e, 0x64, 0x70, 0x6c, 0x63, 0x6f, 0x66, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x52, 0x0f, 0x44, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6c, 0x63, 0x4f, 0x66,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x04, 0x4f, 0x74, 0x68, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4f, 0x74, 0x68, 0x72, 0x52, 0x04, 0x4f, 0x74, 0x68, 0x72, 0x1a, 0x31, 0x0a, 0x02,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x50, 0x72, 0x76, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x72, 0x76, 0x74, 0x69, 0x64, 0x52, 0x06, 0x50, 0x72, 0x76, 0x74, 0x49, 0x64, 0x1a,
	0x20, 0x0a, 0x08, 0x43, 0x74, 0x63, 0x74, 0x64, 0x74, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x6f, 0x62, 0x4e, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x62, 0x4e,
	0x62, 0x1a, 0x6e, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x70, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x4e, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4e, 0x6d, 0x12, 0x1f, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x08, 0x43, 0x74, 0x63, 0x74, 0x44, 0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x74, 0x63, 0x74, 0x64, 0x74, 0x6c, 0x73, 0x52, 0x08, 0x43, 0x74, 0x63, 0x74, 0x44, 0x74, 0x6c,
	0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x69, 0x6e,
	0x30, 0x30, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65,
	0x44, 0x74, 0x54, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x44,
	0x74, 0x54, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x67, 0x70, 0x74, 0x79, 0x52, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79,
	0x1a, 0x2f, 0x0a, 0x07, 0x44, 0x62, 0x74, 0x61, 0x64, 0x76, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x43,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x43, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x74, 0x72,
	0x79, 0x1a, 0x3c, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x64, 0x61, 0x64, 0x76, 0x63, 0x74, 0x70, 0x12,
	0x2e, 0x0a, 0x07, 0x44, 0x62, 0x74, 0x41, 0x64, 0x76, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x62, 0x74, 0x61, 0x64, 0x76, 0x63, 0x52, 0x07, 0x44, 0x62, 0x74, 0x41, 0x64, 0x76, 0x63, 0x1a,
	0x3d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x64, 0x65, 0x78, 0x63, 0x74, 0x6e, 0x64, 0x74, 0x12, 0x13,
	0x0a, 0x02, 0x44, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x44, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x74, 0x54, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x74, 0x54, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x44, 0x74, 0x1a, 0x6a,
	0x0a, 0x04, 0x44, 0x62, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x4e, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x4e, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x74, 0x63, 0x74, 0x44,
	0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x74, 0x63, 0x74, 0x64, 0x74, 0x6c, 0x73,
	0x52, 0x08, 0x43, 0x74, 0x63, 0x74, 0x44, 0x74, 0x6c, 0x73, 0x1a, 0x2c, 0x0a, 0x03, 0x49, 0x64,
	0x32, 0x12, 0x25, 0x0a, 0x04, 0x4f, 0x74, 0x68, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x74,
	0x68, 0x72, 0x52, 0x04, 0x4f, 0x74, 0x68, 0x72, 0x1a, 0x3c, 0x0a, 0x08, 0x44, 0x62, 0x74, 0x72,
	0x61, 0x63, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x64, 0x32, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4e, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x4e, 0x6d, 0x1a, 0x23, 0x0a, 0x0b, 0x43, 0x6c, 0x72, 0x73, 0x79, 0x73,
	0x6d, 0x6d, 0x62, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6d, 0x62, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6d, 0x62, 0x49, 0x64, 0x1a, 0x48, 0x0a, 0x0a, 0x46,
	0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x6e, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x6c, 0x72,
	0x53, 0x79, 0x73, 0x4d, 0x6d, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6c, 0x72,
	0x73, 0x79, 0x73, 0x6d, 0x6d, 0x62, 0x69, 0x64, 0x52, 0x0b, 0x43, 0x6c, 0x72, 0x53, 0x79, 0x73,
	0x4d, 0x6d, 0x62, 0x49, 0x64, 0x1a, 0x42, 0x0a, 0x07, 0x44, 0x62, 0x74, 0x72, 0x61, 0x67, 0x74,
	0x12, 0x37, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x6e, 0x69, 0x64, 0x52, 0x0a, 0x46,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x1a, 0x3c, 0x0a, 0x08, 0x50, 0x6d, 0x74,
	0x74, 0x70, 0x69, 0x6e, 0x66, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x74, 0x67, 0x79, 0x50, 0x75, 0x72,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x6d, 0x52, 0x08, 0x43,
	0x74, 0x67, 0x79, 0x50, 0x75, 0x72, 0x70, 0x1a, 0x2e, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x64,
	0x61, 0x6d, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x1a, 0x49, 0x0a, 0x07, 0x45, 0x71, 0x76, 0x74, 0x61,
	0x6d, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6d,
	0x74, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x63, 0x79, 0x4f, 0x66, 0x54,
	0x72, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x63, 0x79, 0x4f, 0x66, 0x54,
	0x72, 0x66, 0x1a, 0x69, 0x0a, 0x04, 0x41, 0x6d, 0x74, 0x31, 0x12, 0x31, 0x0a, 0x08, 0x49, 0x6e,
	0x73, 0x74, 0x64, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x64,
	0x61, 0x6d, 0x74, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x64, 0x41, 0x6d, 0x74, 0x12, 0x2e, 0x0a,
	0x07, 0x45, 0x71, 0x76, 0x74, 0x41, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x71, 0x76,
	0x74, 0x61, 0x6d, 0x74, 0x52, 0x07, 0x45, 0x71, 0x76, 0x74, 0x41, 0x6d, 0x74, 0x1a, 0x42, 0x0a,
	0x07, 0x43, 0x64, 0x74, 0x72, 0x61, 0x67, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x6e,
	0x73, 0x74, 0x6e, 0x69, 0x64, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49,
	0x64, 0x1a, 0x6a, 0x0a, 0x04, 0x43, 0x64, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x4e, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4e, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x74,
	0x63, 0x74, 0x44, 0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x74, 0x63, 0x74, 0x64,
	0x74, 0x6c, 0x73, 0x52, 0x08, 0x43, 0x74, 0x63, 0x74, 0x44, 0x74, 0x6c, 0x73, 0x1a, 0x3c, 0x0a,
	0x08, 0x43, 0x64, 0x74, 0x72, 0x61, 0x63, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x64, 0x32, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4e,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4e, 0x6d, 0x1a, 0x16, 0x0a, 0x04, 0x50,
	0x75, 0x72, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x43, 0x64, 0x1a, 0x26, 0x0a, 0x04, 0x44, 0x74, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x43,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x43, 0x64, 0x1a, 0x33, 0x0a, 0x0a, 0x52,
	0x67, 0x6c, 0x74, 0x72, 0x79, 0x72, 0x70, 0x74, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x74, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x74, 0x6c, 0x73, 0x52, 0x04, 0x44, 0x74, 0x6c, 0x73,
	0x1a, 0x1e, 0x0a, 0x06, 0x52, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73,
	0x74, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x73, 0x74, 0x72, 0x64,
	0x1a, 0x7b, 0x0a, 0x05, 0x44, 0x62, 0x74, 0x72, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x72, 0x73,
	0x74, 0x4e, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x72, 0x73, 0x74, 0x4e,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x64, 0x64, 0x6c, 0x4e, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4d, 0x64, 0x64, 0x6c, 0x4e, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x73,
	0x74, 0x4e, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x72, 0x63, 0x68, 0x6e, 0x74, 0x43, 0x6c, 0x73, 0x73, 0x66,
	0x63, 0x74, 0x6e, 0x43, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4d, 0x72, 0x63,
	0x68, 0x6e, 0x74, 0x43, 0x6c, 0x73, 0x73, 0x66, 0x63, 0x74, 0x6e, 0x43, 0x64, 0x1a, 0x3a, 0x0a,
	0x14, 0x44, 0x62, 0x74, 0x72, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73, 0x70, 0x72, 0x76, 0x64,
	0x72, 0x66, 0x65, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x1a, 0xc9, 0x01, 0x0a, 0x0a, 0x44, 0x6f,
	0x63, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x12, 0x26, 0x0a, 0x04, 0x44, 0x62, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x31, 0x52, 0x04, 0x44, 0x62, 0x74, 0x72,
	0x12, 0x26, 0x0a, 0x04, 0x43, 0x64, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74,
	0x72, 0x31, 0x52, 0x04, 0x43, 0x64, 0x74, 0x72, 0x12, 0x55, 0x0a, 0x14, 0x44, 0x62, 0x74, 0x72,
	0x46, 0x69, 0x6e, 0x53, 0x76, 0x63, 0x73, 0x50, 0x72, 0x76, 0x64, 0x72, 0x46, 0x65, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73,
	0x70, 0x72, 0x76, 0x64, 0x72, 0x66, 0x65, 0x65, 0x73, 0x52, 0x14, 0x44, 0x62, 0x74, 0x72, 0x46,
	0x69, 0x6e, 0x53, 0x76, 0x63, 0x73, 0x50, 0x72, 0x76, 0x64, 0x72, 0x46, 0x65, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x58, 0x70, 0x72, 0x74, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x58, 0x70, 0x72, 0x74, 0x6e, 0x1a, 0x39, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x50, 0x61,
	0x69, 0x6e, 0x30, 0x30, 0x31, 0x12, 0x29, 0x0a, 0x03, 0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x6f, 0x63, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x52, 0x03, 0x44, 0x6f, 0x63,
	0x1a, 0x45, 0x0a, 0x12, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x12, 0x2f, 0x0a, 0x05, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31,
	0x52, 0x05, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x1a, 0x81, 0x04, 0x0a, 0x0b, 0x43, 0x64, 0x74, 0x74,
	0x72, 0x66, 0x74, 0x78, 0x69, 0x6e, 0x66, 0x12, 0x28, 0x0a, 0x05, 0x50, 0x6d, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d, 0x74, 0x69, 0x64, 0x52, 0x05, 0x50, 0x6d, 0x74, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x6d, 0x74, 0x54, 0x70, 0x49, 0x6e, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x6d, 0x74, 0x74, 0x70, 0x69, 0x6e, 0x66, 0x52, 0x08, 0x50, 0x6d, 0x74, 0x54,
	0x70, 0x49, 0x6e, 0x66, 0x12, 0x23, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x6d, 0x74, 0x31, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x72,
	0x67, 0x42, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x72, 0x67, 0x42,
	0x72, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x64, 0x74, 0x72, 0x41, 0x67, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x64, 0x74, 0x72, 0x61, 0x67, 0x74, 0x52, 0x07, 0x43, 0x64, 0x74, 0x72, 0x41, 0x67,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x64, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64,
	0x74, 0x72, 0x52, 0x04, 0x43, 0x64, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x64, 0x74, 0x72,
	0x41, 0x63, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x61, 0x63, 0x63,
	0x74, 0x52, 0x08, 0x43, 0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x50,
	0x75, 0x72, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x70, 0x52, 0x04, 0x50, 0x75,
	0x72, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x52, 0x70, 0x74, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x72, 0x70, 0x74, 0x67, 0x52,
	0x0a, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x52, 0x70, 0x74, 0x67, 0x12, 0x2b, 0x0a, 0x06, 0x52,
	0x6d, 0x74, 0x49, 0x6e, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x52,
	0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6d, 0x74, 0x69, 0x6e, 0x66,
	0x52, 0x06, 0x52, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x12, 0x41, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x6d,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x6d,
	0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x52, 0x0b,
	0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xf7, 0x02, 0x0a, 0x06,
	0x50, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6d, 0x74, 0x4d, 0x74, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x50, 0x6d, 0x74, 0x4d, 0x74, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x65,
	0x71, 0x64, 0x41, 0x64, 0x76, 0x63, 0x54, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x64, 0x61, 0x64, 0x76, 0x63, 0x74, 0x70, 0x52, 0x0a, 0x52, 0x65, 0x71, 0x64, 0x41, 0x64, 0x76,
	0x63, 0x54, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x64, 0x45, 0x78, 0x63, 0x74, 0x6e,
	0x44, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x64, 0x65, 0x78, 0x63, 0x74, 0x6e,
	0x64, 0x74, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x64, 0x45, 0x78, 0x63, 0x74, 0x6e, 0x44, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x44, 0x62, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72,
	0x52, 0x04, 0x44, 0x62, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x44, 0x62, 0x74, 0x72, 0x41, 0x63,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x63, 0x63, 0x74, 0x52,
	0x08, 0x44, 0x62, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x44, 0x62, 0x74,
	0x72, 0x41, 0x67, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x67, 0x74,
	0x52, 0x07, 0x44, 0x62, 0x74, 0x72, 0x41, 0x67, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x64, 0x74,
	0x54, 0x72, 0x66, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74,
	0x74, 0x72, 0x66, 0x74, 0x78, 0x69, 0x6e, 0x66, 0x52, 0x0b, 0x43, 0x64, 0x74, 0x54, 0x72, 0x66,
	0x54, 0x78, 0x49, 0x6e, 0x66, 0x1a, 0x2d, 0x0a, 0x05, 0x47, 0x6c, 0x63, 0x74, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x4c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4c, 0x6f, 0x6e, 0x67, 0x1a, 0x60, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x70, 0x74, 0x79,
	0x31, 0x12, 0x1d, 0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x72, 0x54, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x72, 0x54, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x05, 0x47, 0x6c, 0x63, 0x74, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x6c,
	0x63, 0x74, 0x6e, 0x52, 0x05, 0x47, 0x6c, 0x63, 0x74, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49,
	0x6e, 0x69, 0x74, 0x72, 0x54, 0x70, 0x1a, 0x3a, 0x0a, 0x04, 0x44, 0x6f, 0x63, 0x31, 0x12, 0x32,
	0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x67, 0x70, 0x74, 0x79, 0x31, 0x52, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50,
	0x74, 0x79, 0x1a, 0x2d, 0x0a, 0x06, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x31, 0x12, 0x23, 0x0a, 0x03,
	0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x31, 0x52, 0x03, 0x44, 0x6f,
	0x63, 0x1a, 0x39, 0x0a, 0x0c, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x12, 0x29, 0x0a, 0x05, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x6e, 0x76, 0x6c, 0x70, 0x31, 0x52, 0x05, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x1a, 0xb0, 0x01, 0x0a,
	0x10, 0x43, 0x73, 0x74, 0x6d, 0x72, 0x63, 0x64, 0x74, 0x74, 0x72, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x6e, 0x12, 0x32, 0x0a, 0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x52, 0x06, 0x47,
	0x72, 0x70, 0x48, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x52, 0x06, 0x50, 0x6d, 0x74, 0x49,
	0x6e, 0x66, 0x12, 0x3b, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74,
	0x61, 0x31, 0x52, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x8c, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31,
	0x33, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x44, 0x74,
	0x54, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x44, 0x74, 0x54,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x49,
	0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x67, 0x70, 0x74, 0x79, 0x52, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x1a, 0x30,
	0x0a, 0x0a, 0x50, 0x79, 0x65, 0x65, 0x72, 0x63, 0x76, 0x61, 0x6d, 0x74, 0x12, 0x22, 0x0a, 0x03,
	0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74,
	0x1a, 0x39, 0x0a, 0x13, 0x50, 0x79, 0x65, 0x65, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73, 0x70,
	0x72, 0x76, 0x64, 0x72, 0x66, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x1a, 0x3c, 0x0a, 0x16, 0x50,
	0x79, 0x65, 0x65, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73, 0x70, 0x72, 0x76, 0x64, 0x72, 0x63,
	0x6f, 0x6d, 0x73, 0x73, 0x6e, 0x12, 0x22, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x1a, 0xf6, 0x01, 0x0a, 0x0a, 0x44, 0x6f,
	0x63, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x12, 0x37, 0x0a, 0x0a, 0x50, 0x79, 0x65, 0x65,
	0x52, 0x63, 0x76, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x79, 0x65, 0x65, 0x72,
	0x63, 0x76, 0x61, 0x6d, 0x74, 0x52, 0x0a, 0x50, 0x79, 0x65, 0x65, 0x52, 0x63, 0x76, 0x41, 0x6d,
	0x74, 0x12, 0x52, 0x0a, 0x13, 0x50, 0x79, 0x65, 0x65, 0x46, 0x69, 0x6e, 0x53, 0x76, 0x63, 0x73,
	0x50, 0x72, 0x76, 0x64, 0x72, 0x46, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x79, 0x65,
	0x65, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73, 0x70, 0x72, 0x76, 0x64, 0x72, 0x66, 0x65, 0x65,
	0x52, 0x13, 0x50, 0x79, 0x65, 0x65, 0x46, 0x69, 0x6e, 0x53, 0x76, 0x63, 0x73, 0x50, 0x72, 0x76,
	0x64, 0x72, 0x46, 0x65, 0x65, 0x12, 0x5b, 0x0a, 0x16, 0x50, 0x79, 0x65, 0x65, 0x46, 0x69, 0x6e,
	0x53, 0x76, 0x63, 0x73, 0x50, 0x72, 0x76, 0x64, 0x72, 0x43, 0x6f, 0x6d, 0x73, 0x73, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x79, 0x65, 0x65, 0x66, 0x69, 0x6e, 0x73, 0x76, 0x63, 0x73, 0x70,
	0x72, 0x76, 0x64, 0x72, 0x63, 0x6f, 0x6d, 0x73, 0x73, 0x6e, 0x52, 0x16, 0x50, 0x79, 0x65, 0x65,
	0x46, 0x69, 0x6e, 0x53, 0x76, 0x63, 0x73, 0x50, 0x72, 0x76, 0x64, 0x72, 0x43, 0x6f, 0x6d, 0x73,
	0x73, 0x6e, 0x1a, 0x39, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x50, 0x61, 0x69, 0x6e, 0x30,
	0x31, 0x33, 0x12, 0x29, 0x0a, 0x03, 0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f,
	0x63, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x52, 0x03, 0x44, 0x6f, 0x63, 0x1a, 0x45, 0x0a,
	0x12, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x69, 0x6e,
	0x30, 0x31, 0x33, 0x12, 0x2f, 0x0a, 0x05, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x52, 0x05, 0x45,
	0x6e, 0x76, 0x6c, 0x70, 0x1a, 0xdb, 0x03, 0x0a, 0x12, 0x43, 0x64, 0x74, 0x74, 0x72, 0x66, 0x74,
	0x78, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x12, 0x28, 0x0a, 0x05, 0x50,
	0x6d, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d, 0x74, 0x69, 0x64, 0x52, 0x05,
	0x50, 0x6d, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x6d, 0x74, 0x54, 0x70, 0x49, 0x6e,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d, 0x74, 0x74, 0x70, 0x69, 0x6e, 0x66, 0x52, 0x08,
	0x50, 0x6d, 0x74, 0x54, 0x70, 0x49, 0x6e, 0x66, 0x12, 0x23, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x6d, 0x74, 0x31, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x68, 0x72, 0x67, 0x42, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43,
	0x68, 0x72, 0x67, 0x42, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x64, 0x74, 0x72, 0x41, 0x67, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x61, 0x67, 0x74, 0x52, 0x07, 0x43, 0x64,
	0x74, 0x72, 0x41, 0x67, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x64, 0x74, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x52, 0x04, 0x43, 0x64, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x08,
	0x43, 0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74,
	0x72, 0x61, 0x63, 0x63, 0x74, 0x52, 0x08, 0x43, 0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x50, 0x75, 0x72, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x70,
	0x52, 0x04, 0x50, 0x75, 0x72, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79,
	0x52, 0x70, 0x74, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x72,
	0x70, 0x74, 0x67, 0x52, 0x0a, 0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x52, 0x70, 0x74, 0x67, 0x12,
	0x41, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61,
	0x69, 0x6e, 0x30, 0x31, 0x33, 0x52, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0xb7, 0x03, 0x0a, 0x0d, 0x50, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x69,
	0x6e, 0x30, 0x31, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x6d, 0x74, 0x4d, 0x74, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x50, 0x6d, 0x74, 0x4d, 0x74, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x64,
	0x41, 0x64, 0x76, 0x63, 0x54, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x64, 0x61,
	0x64, 0x76, 0x63, 0x74, 0x70, 0x52, 0x0a, 0x52, 0x65, 0x71, 0x64, 0x41, 0x64, 0x76, 0x63, 0x54,
	0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x64, 0x45, 0x78, 0x63, 0x74, 0x6e, 0x44, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x64, 0x65, 0x78, 0x63, 0x74, 0x6e, 0x64, 0x74,
	0x52, 0x0b, 0x52, 0x65, 0x71, 0x64, 0x45, 0x78, 0x63, 0x74, 0x6e, 0x44, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x58, 0x70, 0x72, 0x79, 0x44, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x64,
	0x65, 0x78, 0x63, 0x74, 0x6e, 0x64, 0x74, 0x52, 0x06, 0x58, 0x70, 0x72, 0x79, 0x44, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x44, 0x62, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72,
	0x52, 0x04, 0x44, 0x62, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x44, 0x62, 0x74, 0x72, 0x41, 0x63,
	0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x63, 0x63, 0x74, 0x52,
	0x08, 0x44, 0x62, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x44, 0x62, 0x74,
	0x72, 0x41, 0x67, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x67, 0x74,
	0x52, 0x07, 0x44, 0x62, 0x74, 0x72, 0x41, 0x67, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x64, 0x74,
	0x54, 0x72, 0x66, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74,
	0x74, 0x72, 0x66, 0x74, 0x78, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x52,
	0x0b, 0x43, 0x64, 0x74, 0x54, 0x72, 0x66, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x1a, 0xb7, 0x01, 0x0a,
	0x10, 0x43, 0x64, 0x74, 0x72, 0x70, 0x6d, 0x74, 0x61, 0x63, 0x74, 0x76, 0x74, 0x6e, 0x72, 0x65,
	0x71, 0x12, 0x32, 0x0a, 0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31, 0x33, 0x52, 0x06, 0x47,
	0x72, 0x70, 0x48, 0x64, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x31,
	0x33, 0x52, 0x06, 0x50, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x12, 0x3b, 0x0a, 0x0b, 0x53, 0x70, 0x6c,
	0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x70, 0x6c,
	0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x31, 0x52, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x06, 0x47, 0x72, 0x70, 0x68, 0x64, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x44, 0x74, 0x54,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x44, 0x74, 0x54, 0x6d,
	0x1a, 0x3e, 0x0a, 0x03, 0x41, 0x67, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52,
	0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x6e, 0x69, 0x64, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64,
	0x1a, 0x52, 0x0a, 0x08, 0x43, 0x68, 0x72, 0x67, 0x73, 0x69, 0x6e, 0x66, 0x12, 0x22, 0x0a, 0x03,
	0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74,
	0x12, 0x22, 0x0a, 0x03, 0x41, 0x67, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x67, 0x74, 0x52,
	0x03, 0x41, 0x67, 0x74, 0x1a, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x67, 0x61, 0x67, 0x74,
	0x12, 0x37, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x6e, 0x69, 0x64, 0x52, 0x0a, 0x46,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x1a, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x64, 0x61, 0x67, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x6e,
	0x69, 0x64, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x1a, 0xac,
	0x02, 0x0a, 0x0b, 0x54, 0x78, 0x69, 0x6e, 0x66, 0x61, 0x6e, 0x64, 0x73, 0x74, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x6e, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x67, 0x6e, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x6e, 0x6c, 0x45, 0x6e, 0x64, 0x54, 0x6f,
	0x45, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x72, 0x67,
	0x6e, 0x6c, 0x45, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x78, 0x53, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x78, 0x53,
	0x74, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x68, 0x72, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x72, 0x67, 0x73, 0x69, 0x6e, 0x66, 0x52, 0x08, 0x43, 0x68, 0x72,
	0x67, 0x73, 0x49, 0x6e, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x70, 0x74, 0x6e, 0x63,
	0x44, 0x74, 0x54, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x70,
	0x74, 0x6e, 0x63, 0x44, 0x74, 0x54, 0x6d, 0x12, 0x31, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x67,
	0x41, 0x67, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x67, 0x61, 0x67, 0x74,
	0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x67, 0x41, 0x67, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x49, 0x6e,
	0x73, 0x74, 0x64, 0x41, 0x67, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x64,
	0x61, 0x67, 0x74, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x64, 0x41, 0x67, 0x74, 0x1a, 0x77, 0x0a,
	0x0c, 0x46, 0x69, 0x74, 0x6f, 0x66, 0x69, 0x70, 0x6d, 0x74, 0x73, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x70, 0x68,
	0x64, 0x72, 0x52, 0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x0b, 0x54, 0x78,
	0x49, 0x6e, 0x66, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x78,
	0x69, 0x6e, 0x66, 0x61, 0x6e, 0x64, 0x73, 0x74, 0x73, 0x52, 0x0b, 0x54, 0x78, 0x49, 0x6e, 0x66,
	0x41, 0x6e, 0x64, 0x53, 0x74, 0x73, 0x1a, 0x60, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x54, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x54, 0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x46, 0x49, 0x54,
	0x6f, 0x46, 0x49, 0x50, 0x6d, 0x74, 0x53, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x74, 0x6f, 0x66, 0x69, 0x70, 0x6d, 0x74, 0x73, 0x74, 0x73, 0x52, 0x0c, 0x46, 0x49, 0x54, 0x6f,
	0x46, 0x49, 0x50, 0x6d, 0x74, 0x53, 0x74, 0x73, 0x1a, 0x3d, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x1a, 0x6c, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x28, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x79, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52,
	0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73,
	0x1a, 0x87, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x66, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x54, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x54, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x1a, 0x69, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x66, 0x67, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x68, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x44, 0x50, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x44, 0x50, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x43, 0x52, 0x53, 0x50, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x43, 0x52, 0x53, 0x50, 0x1a,
	0xbf, 0x01, 0x0a, 0x0b, 0x52, 0x75, 0x6c, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x66,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x67, 0x68,
	0x74, 0x1a, 0x9b, 0x02, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x0b, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72,
	0x63, 0x67, 0x54, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x1a,
	0xbe, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x66, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x74,
	0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0e, 0x74, 0x79, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x68, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x0a, 0x54,
	0x61, 0x64, 0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x40, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x63, 0x67, 0x54, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x72, 0x63, 0x67, 0x54, 0x6d, 0x1a, 0xb0, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x37, 0x0a, 0x0a, 0x74, 0x61, 0x64, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x61, 0x64, 0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x74, 0x61,
	0x64, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x26, 0x0a, 0x08, 0x53, 0x74, 0x74, 0x6c,
	0x6d, 0x69, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x4d, 0x74, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x4d, 0x74, 0x64,
	0x1a, 0x8c, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x63, 0x73, 0x30,
	0x30, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x44,
	0x74, 0x54, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x44, 0x74,
	0x54, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x4e, 0x62, 0x4f, 0x66, 0x54, 0x78, 0x73, 0x12, 0x31, 0x0a, 0x08,
	0x53, 0x74, 0x74, 0x6c, 0x6d, 0x49, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x74,
	0x6c, 0x6d, 0x69, 0x6e, 0x66, 0x52, 0x08, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x49, 0x6e, 0x66, 0x1a,
	0x52, 0x0a, 0x05, 0x50, 0x6d, 0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x64, 0x54, 0x6f,
	0x45, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x64,
	0x54, 0x6f, 0x45, 0x6e, 0x64, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x49, 0x64, 0x1a, 0x34, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x72, 0x62, 0x6b, 0x73, 0x74, 0x74,
	0x6c, 0x6d, 0x61, 0x6d, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x41, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x6d, 0x74, 0x52, 0x03, 0x41, 0x6d, 0x74, 0x1a, 0xef, 0x04, 0x0a, 0x12, 0x43, 0x64,
	0x74, 0x74, 0x72, 0x66, 0x74, 0x78, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38,
	0x12, 0x28, 0x0a, 0x05, 0x50, 0x6d, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6d,
	0x74, 0x69, 0x64, 0x52, 0x05, 0x50, 0x6d, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x49, 0x6e,
	0x74, 0x72, 0x42, 0x6b, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x41, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x72, 0x62, 0x6b, 0x73, 0x74, 0x74, 0x6c, 0x6d, 0x61, 0x6d, 0x74, 0x52,
	0x0e, 0x49, 0x6e, 0x74, 0x72, 0x42, 0x6b, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x41, 0x6d, 0x74, 0x12,
	0x31, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x64, 0x41, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x64, 0x61, 0x6d, 0x74, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x64, 0x41,
	0x6d, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x72, 0x67, 0x42, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x72, 0x67, 0x42, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x68,
	0x72, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46,
	0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x72, 0x67, 0x73,
	0x69, 0x6e, 0x66, 0x52, 0x08, 0x43, 0x68, 0x72, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x12, 0x31, 0x0a,
	0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x67, 0x70, 0x74, 0x79, 0x52, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79,
	0x12, 0x25, 0x0a, 0x04, 0x44, 0x62, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74,
	0x72, 0x52, 0x04, 0x44, 0x62, 0x74, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x44, 0x62, 0x74, 0x72, 0x41,
	0x63, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x63, 0x63, 0x74,
	0x52, 0x08, 0x44, 0x62, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x44, 0x62,
	0x74, 0x72, 0x41, 0x67, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52,
	0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x62, 0x74, 0x72, 0x61, 0x67,
	0x74, 0x52, 0x07, 0x44, 0x62, 0x74, 0x72, 0x41, 0x67, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x64,
	0x74, 0x72, 0x41, 0x67, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x52,
	0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x61, 0x67,
	0x74, 0x52, 0x07, 0x43, 0x64, 0x74, 0x72, 0x41, 0x67, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x64,
	0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x52, 0x04, 0x43, 0x64, 0x74,
	0x72, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x64, 0x74, 0x72, 0x61, 0x63, 0x63, 0x74, 0x52, 0x08, 0x43, 0x64, 0x74, 0x72,
	0x41, 0x63, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x50, 0x75, 0x72, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x75, 0x72, 0x70, 0x52, 0x04, 0x50, 0x75, 0x72, 0x70, 0x1a, 0x4f, 0x0a, 0x03, 0x44,
	0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x58, 0x70, 0x72, 0x74, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x58, 0x70, 0x72, 0x74, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74,
	0x67, 0x50, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x52, 0x4d,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x70, 0x74,
	0x79, 0x31, 0x52, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x67, 0x50, 0x74, 0x79, 0x1a, 0x2b, 0x0a, 0x05,
	0x45, 0x6e, 0x76, 0x6c, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x6f, 0x63, 0x52, 0x03, 0x44, 0x6f, 0x63, 0x1a, 0x37, 0x0a, 0x0b, 0x53, 0x70, 0x6c,
	0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x6e, 0x76, 0x6c,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x6c, 0x70, 0x52, 0x05, 0x45, 0x6e, 0x76,
	0x6c, 0x70, 0x1a, 0xa9, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x74, 0x6f, 0x66, 0x69, 0x63, 0x73, 0x74,
	0x6d, 0x72, 0x63, 0x64, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x70, 0x68, 0x64, 0x72, 0x50, 0x61, 0x63, 0x73, 0x30, 0x30,
	0x38, 0x52, 0x06, 0x47, 0x72, 0x70, 0x48, 0x64, 0x72, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x64, 0x74,
	0x54, 0x72, 0x66, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x64, 0x74,
	0x74, 0x72, 0x66, 0x74, 0x78, 0x69, 0x6e, 0x66, 0x50, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x52,
	0x0b, 0x43, 0x64, 0x74, 0x54, 0x72, 0x66, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x12, 0x37, 0x0a, 0x0a,
	0x52, 0x67, 0x6c, 0x74, 0x72, 0x79, 0x52, 0x70, 0x74, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x67, 0x6c, 0x74, 0x72, 0x79, 0x72, 0x70, 0x74, 0x67, 0x52, 0x0a, 0x52, 0x67, 0x6c, 0x74, 0x72,
	0x79, 0x52, 0x70, 0x74, 0x67, 0x12, 0x2b, 0x0a, 0x06, 0x52, 0x6d, 0x74, 0x49, 0x6e, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x6d, 0x74, 0x69, 0x6e, 0x66, 0x52, 0x06, 0x52, 0x6d, 0x74, 0x49,
	0x6e, 0x66, 0x12, 0x3a, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x52, 0x4d, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x53, 0x70, 0x6c, 0x6d, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x7b,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x62, 0x74, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x74,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x64, 0x74, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x64, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x64, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x62, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x62, 0x74, 0x72, 0x41, 0x63, 0x63, 0x74, 0x49, 0x64, 0x42, 0x03, 0x5a, 0x01, 0x2e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_full_proto_rawDescOnce sync.Once
	file_full_proto_rawDescData = file_full_proto_rawDesc
)

func file_full_proto_rawDescGZIP() []byte {
	file_full_proto_rawDescOnce.Do(func() {
		file_full_proto_rawDescData = protoimpl.X.CompressGZIP(file_full_proto_rawDescData)
	})
	return file_full_proto_rawDescData
}

var file_full_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_full_proto_goTypes = []interface{}{
	(*FRMSMessage)(nil),                        // 0: FRMSMessage
	(*FRMSMessage_Dtandplcofbirth)(nil),        // 1: FRMSMessage.Dtandplcofbirth
	(*FRMSMessage_Amt)(nil),                    // 2: FRMSMessage.Amt
	(*FRMSMessage_Schmenm)(nil),                // 3: FRMSMessage.Schmenm
	(*FRMSMessage_Othr)(nil),                   // 4: FRMSMessage.Othr
	(*FRMSMessage_Prvtid)(nil),                 // 5: FRMSMessage.Prvtid
	(*FRMSMessage_Id)(nil),                     // 6: FRMSMessage.Id
	(*FRMSMessage_Ctctdtls)(nil),               // 7: FRMSMessage.Ctctdtls
	(*FRMSMessage_Initgpty)(nil),               // 8: FRMSMessage.Initgpty
	(*FRMSMessage_GrphdrPain001)(nil),          // 9: FRMSMessage.GrphdrPain001
	(*FRMSMessage_Dbtadvc)(nil),                // 10: FRMSMessage.Dbtadvc
	(*FRMSMessage_Reqdadvctp)(nil),             // 11: FRMSMessage.Reqdadvctp
	(*FRMSMessage_Reqdexctndt)(nil),            // 12: FRMSMessage.Reqdexctndt
	(*FRMSMessage_Dbtr)(nil),                   // 13: FRMSMessage.Dbtr
	(*FRMSMessage_Id2)(nil),                    // 14: FRMSMessage.Id2
	(*FRMSMessage_Dbtracct)(nil),               // 15: FRMSMessage.Dbtracct
	(*FRMSMessage_Clrsysmmbid)(nil),            // 16: FRMSMessage.Clrsysmmbid
	(*FRMSMessage_Fininstnid)(nil),             // 17: FRMSMessage.Fininstnid
	(*FRMSMessage_Dbtragt)(nil),                // 18: FRMSMessage.Dbtragt
	(*FRMSMessage_Pmttpinf)(nil),               // 19: FRMSMessage.Pmttpinf
	(*FRMSMessage_Instdamt)(nil),               // 20: FRMSMessage.Instdamt
	(*FRMSMessage_Eqvtamt)(nil),                // 21: FRMSMessage.Eqvtamt
	(*FRMSMessage_Amt1)(nil),                   // 22: FRMSMessage.Amt1
	(*FRMSMessage_Cdtragt)(nil),                // 23: FRMSMessage.Cdtragt
	(*FRMSMessage_Cdtr)(nil),                   // 24: FRMSMessage.Cdtr
	(*FRMSMessage_Cdtracct)(nil),               // 25: FRMSMessage.Cdtracct
	(*FRMSMessage_Purp)(nil),                   // 26: FRMSMessage.Purp
	(*FRMSMessage_Dtls)(nil),                   // 27: FRMSMessage.Dtls
	(*FRMSMessage_Rgltryrptg)(nil),             // 28: FRMSMessage.Rgltryrptg
	(*FRMSMessage_Rmtinf)(nil),                 // 29: FRMSMessage.Rmtinf
	(*FRMSMessage_Dbtr1)(nil),                  // 30: FRMSMessage.Dbtr1
	(*FRMSMessage_Dbtrfinsvcsprvdrfees)(nil),   // 31: FRMSMessage.Dbtrfinsvcsprvdrfees
	(*FRMSMessage_DocPain001)(nil),             // 32: FRMSMessage.DocPain001
	(*FRMSMessage_EnvlpPain001)(nil),           // 33: FRMSMessage.EnvlpPain001
	(*FRMSMessage_SplmtrydataPain001)(nil),     // 34: FRMSMessage.SplmtrydataPain001
	(*FRMSMessage_Cdttrftxinf)(nil),            // 35: FRMSMessage.Cdttrftxinf
	(*FRMSMessage_Pmtinf)(nil),                 // 36: FRMSMessage.Pmtinf
	(*FRMSMessage_Glctn)(nil),                  // 37: FRMSMessage.Glctn
	(*FRMSMessage_Initgpty1)(nil),              // 38: FRMSMessage.Initgpty1
	(*FRMSMessage_Doc1)(nil),                   // 39: FRMSMessage.Doc1
	(*FRMSMessage_Envlp1)(nil),                 // 40: FRMSMessage.Envlp1
	(*FRMSMessage_Splmtrydata1)(nil),           // 41: FRMSMessage.Splmtrydata1
	(*FRMSMessage_Cstmrcdttrfinitn)(nil),       // 42: FRMSMessage.Cstmrcdttrfinitn
	(*FRMSMessage_GrphdrPain013)(nil),          // 43: FRMSMessage.GrphdrPain013
	(*FRMSMessage_Pyeercvamt)(nil),             // 44: FRMSMessage.Pyeercvamt
	(*FRMSMessage_Pyeefinsvcsprvdrfee)(nil),    // 45: FRMSMessage.Pyeefinsvcsprvdrfee
	(*FRMSMessage_Pyeefinsvcsprvdrcomssn)(nil), // 46: FRMSMessage.Pyeefinsvcsprvdrcomssn
	(*FRMSMessage_DocPain013)(nil),             // 47: FRMSMessage.DocPain013
	(*FRMSMessage_EnvlpPain013)(nil),           // 48: FRMSMessage.EnvlpPain013
	(*FRMSMessage_SplmtrydataPain013)(nil),     // 49: FRMSMessage.SplmtrydataPain013
	(*FRMSMessage_CdttrftxinfPain013)(nil),     // 50: FRMSMessage.CdttrftxinfPain013
	(*FRMSMessage_PmtinfPain013)(nil),          // 51: FRMSMessage.PmtinfPain013
	(*FRMSMessage_Cdtrpmtactvtnreq)(nil),       // 52: FRMSMessage.Cdtrpmtactvtnreq
	(*FRMSMessage_Grphdr)(nil),                 // 53: FRMSMessage.Grphdr
	(*FRMSMessage_Agt)(nil),                    // 54: FRMSMessage.Agt
	(*FRMSMessage_Chrgsinf)(nil),               // 55: FRMSMessage.Chrgsinf
	(*FRMSMessage_Instgagt)(nil),               // 56: FRMSMessage.Instgagt
	(*FRMSMessage_Instdagt)(nil),               // 57: FRMSMessage.Instdagt
	(*FRMSMessage_Txinfandsts)(nil),            // 58: FRMSMessage.Txinfandsts
	(*FRMSMessage_Fitofipmtsts)(nil),           // 59: FRMSMessage.Fitofipmtsts
	(*FRMSMessage_Transaction)(nil),            // 60: FRMSMessage.Transaction
	(*FRMSMessage_Rules)(nil),                  // 61: FRMSMessage.Rules
	(*FRMSMessage_Typologies)(nil),             // 62: FRMSMessage.Typologies
	(*FRMSMessage_Channels)(nil),               // 63: FRMSMessage.Channels
	(*FRMSMessage_Messages)(nil),               // 64: FRMSMessage.Messages
	(*FRMSMessage_Networkmap)(nil),             // 65: FRMSMessage.Networkmap
	(*FRMSMessage_Metadata)(nil),               // 66: FRMSMessage.Metadata
	(*FRMSMessage_Ruleresults)(nil),            // 67: FRMSMessage.Ruleresults
	(*FRMSMessage_Typologyresult)(nil),         // 68: FRMSMessage.Typologyresult
	(*FRMSMessage_Channelresult)(nil),          // 69: FRMSMessage.Channelresult
	(*FRMSMessageWorkflow)(nil),                // 70: FRMSMessage.workflow
	(*FRMSMessage_Tadpresult)(nil),             // 71: FRMSMessage.Tadpresult
	(*FRMSMessage_Report)(nil),                 // 72: FRMSMessage.Report
	(*FRMSMessage_Sttlminf)(nil),               // 73: FRMSMessage.Sttlminf
	(*FRMSMessage_GrphdrPacs008)(nil),          // 74: FRMSMessage.GrphdrPacs008
	(*FRMSMessage_Pmtid)(nil),                  // 75: FRMSMessage.Pmtid
	(*FRMSMessage_Intrbksttlmamt)(nil),         // 76: FRMSMessage.Intrbksttlmamt
	(*FRMSMessage_CdttrftxinfPacs008)(nil),     // 77: FRMSMessage.CdttrftxinfPacs008
	(*FRMSMessage_Doc)(nil),                    // 78: FRMSMessage.Doc
	(*FRMSMessage_Envlp)(nil),                  // 79: FRMSMessage.Envlp
	(*FRMSMessage_Splmtrydata)(nil),            // 80: FRMSMessage.Splmtrydata
	(*FRMSMessage_Fitoficstmrcdt)(nil),         // 81: FRMSMessage.Fitoficstmrcdt
	(*FRMSMessageDataCache)(nil),               // 82: FRMSMessage.dataCache
}
var file_full_proto_depIdxs = []int32{
	60,  // 0: FRMSMessage.transaction:type_name -> FRMSMessage.Transaction
	65,  // 1: FRMSMessage.networkMap:type_name -> FRMSMessage.Networkmap
	82,  // 2: FRMSMessage.DataCache:type_name -> FRMSMessage.dataCache
	66,  // 3: FRMSMessage.metaData:type_name -> FRMSMessage.Metadata
	72,  // 4: FRMSMessage.report:type_name -> FRMSMessage.Report
	59,  // 5: FRMSMessage.FIToFIPmtSts:type_name -> FRMSMessage.Fitofipmtsts
	81,  // 6: FRMSMessage.FIToFICstmrCdt:type_name -> FRMSMessage.Fitoficstmrcdt
	42,  // 7: FRMSMessage.CstmrCdtTrfInitn:type_name -> FRMSMessage.Cstmrcdttrfinitn
	52,  // 8: FRMSMessage.CdtrPmtActvtnReq:type_name -> FRMSMessage.Cdtrpmtactvtnreq
	68,  // 9: FRMSMessage.typologyResult:type_name -> FRMSMessage.Typologyresult
	67,  // 10: FRMSMessage.ruleResult:type_name -> FRMSMessage.Ruleresults
	69,  // 11: FRMSMessage.channelResult:type_name -> FRMSMessage.Channelresult
	3,   // 12: FRMSMessage.Othr.SchmeNm:type_name -> FRMSMessage.Schmenm
	1,   // 13: FRMSMessage.Prvtid.DtAndPlcOfBirth:type_name -> FRMSMessage.Dtandplcofbirth
	4,   // 14: FRMSMessage.Prvtid.Othr:type_name -> FRMSMessage.Othr
	5,   // 15: FRMSMessage.Id.PrvtId:type_name -> FRMSMessage.Prvtid
	6,   // 16: FRMSMessage.Initgpty.Id:type_name -> FRMSMessage.Id
	7,   // 17: FRMSMessage.Initgpty.CtctDtls:type_name -> FRMSMessage.Ctctdtls
	8,   // 18: FRMSMessage.GrphdrPain001.InitgPty:type_name -> FRMSMessage.Initgpty
	10,  // 19: FRMSMessage.Reqdadvctp.DbtAdvc:type_name -> FRMSMessage.Dbtadvc
	6,   // 20: FRMSMessage.Dbtr.Id:type_name -> FRMSMessage.Id
	7,   // 21: FRMSMessage.Dbtr.CtctDtls:type_name -> FRMSMessage.Ctctdtls
	4,   // 22: FRMSMessage.Id2.Othr:type_name -> FRMSMessage.Othr
	14,  // 23: FRMSMessage.Dbtracct.Id:type_name -> FRMSMessage.Id2
	16,  // 24: FRMSMessage.Fininstnid.ClrSysMmbId:type_name -> FRMSMessage.Clrsysmmbid
	17,  // 25: FRMSMessage.Dbtragt.FinInstnId:type_name -> FRMSMessage.Fininstnid
	3,   // 26: FRMSMessage.Pmttpinf.CtgyPurp:type_name -> FRMSMessage.Schmenm
	2,   // 27: FRMSMessage.Instdamt.Amt:type_name -> FRMSMessage.Amt
	2,   // 28: FRMSMessage.Eqvtamt.Amt:type_name -> FRMSMessage.Amt
	20,  // 29: FRMSMessage.Amt1.InstdAmt:type_name -> FRMSMessage.Instdamt
	21,  // 30: FRMSMessage.Amt1.EqvtAmt:type_name -> FRMSMessage.Eqvtamt
	17,  // 31: FRMSMessage.Cdtragt.FinInstnId:type_name -> FRMSMessage.Fininstnid
	6,   // 32: FRMSMessage.Cdtr.Id:type_name -> FRMSMessage.Id
	7,   // 33: FRMSMessage.Cdtr.CtctDtls:type_name -> FRMSMessage.Ctctdtls
	14,  // 34: FRMSMessage.Cdtracct.Id:type_name -> FRMSMessage.Id2
	27,  // 35: FRMSMessage.Rgltryrptg.Dtls:type_name -> FRMSMessage.Dtls
	30,  // 36: FRMSMessage.DocPain001.Dbtr:type_name -> FRMSMessage.Dbtr1
	30,  // 37: FRMSMessage.DocPain001.Cdtr:type_name -> FRMSMessage.Dbtr1
	31,  // 38: FRMSMessage.DocPain001.DbtrFinSvcsPrvdrFees:type_name -> FRMSMessage.Dbtrfinsvcsprvdrfees
	32,  // 39: FRMSMessage.EnvlpPain001.Doc:type_name -> FRMSMessage.DocPain001
	33,  // 40: FRMSMessage.SplmtrydataPain001.Envlp:type_name -> FRMSMessage.EnvlpPain001
	75,  // 41: FRMSMessage.Cdttrftxinf.PmtId:type_name -> FRMSMessage.Pmtid
	19,  // 42: FRMSMessage.Cdttrftxinf.PmtTpInf:type_name -> FRMSMessage.Pmttpinf
	22,  // 43: FRMSMessage.Cdttrftxinf.Amt:type_name -> FRMSMessage.Amt1
	23,  // 44: FRMSMessage.Cdttrftxinf.CdtrAgt:type_name -> FRMSMessage.Cdtragt
	24,  // 45: FRMSMessage.Cdttrftxinf.Cdtr:type_name -> FRMSMessage.Cdtr
	25,  // 46: FRMSMessage.Cdttrftxinf.CdtrAcct:type_name -> FRMSMessage.Cdtracct
	26,  // 47: FRMSMessage.Cdttrftxinf.Purp:type_name -> FRMSMessage.Purp
	28,  // 48: FRMSMessage.Cdttrftxinf.RgltryRptg:type_name -> FRMSMessage.Rgltryrptg
	29,  // 49: FRMSMessage.Cdttrftxinf.RmtInf:type_name -> FRMSMessage.Rmtinf
	34,  // 50: FRMSMessage.Cdttrftxinf.SplmtryData:type_name -> FRMSMessage.SplmtrydataPain001
	11,  // 51: FRMSMessage.Pmtinf.ReqdAdvcTp:type_name -> FRMSMessage.Reqdadvctp
	12,  // 52: FRMSMessage.Pmtinf.ReqdExctnDt:type_name -> FRMSMessage.Reqdexctndt
	13,  // 53: FRMSMessage.Pmtinf.Dbtr:type_name -> FRMSMessage.Dbtr
	15,  // 54: FRMSMessage.Pmtinf.DbtrAcct:type_name -> FRMSMessage.Dbtracct
	18,  // 55: FRMSMessage.Pmtinf.DbtrAgt:type_name -> FRMSMessage.Dbtragt
	35,  // 56: FRMSMessage.Pmtinf.CdtTrfTxInf:type_name -> FRMSMessage.Cdttrftxinf
	37,  // 57: FRMSMessage.Initgpty1.Glctn:type_name -> FRMSMessage.Glctn
	38,  // 58: FRMSMessage.Doc1.InitgPty:type_name -> FRMSMessage.Initgpty1
	39,  // 59: FRMSMessage.Envlp1.Doc:type_name -> FRMSMessage.Doc1
	40,  // 60: FRMSMessage.Splmtrydata1.Envlp:type_name -> FRMSMessage.Envlp1
	9,   // 61: FRMSMessage.Cstmrcdttrfinitn.GrpHdr:type_name -> FRMSMessage.GrphdrPain001
	36,  // 62: FRMSMessage.Cstmrcdttrfinitn.PmtInf:type_name -> FRMSMessage.Pmtinf
	41,  // 63: FRMSMessage.Cstmrcdttrfinitn.SplmtryData:type_name -> FRMSMessage.Splmtrydata1
	8,   // 64: FRMSMessage.GrphdrPain013.InitgPty:type_name -> FRMSMessage.Initgpty
	2,   // 65: FRMSMessage.Pyeercvamt.Amt:type_name -> FRMSMessage.Amt
	2,   // 66: FRMSMessage.Pyeefinsvcsprvdrfee.Amt:type_name -> FRMSMessage.Amt
	2,   // 67: FRMSMessage.Pyeefinsvcsprvdrcomssn.Amt:type_name -> FRMSMessage.Amt
	44,  // 68: FRMSMessage.DocPain013.PyeeRcvAmt:type_name -> FRMSMessage.Pyeercvamt
	45,  // 69: FRMSMessage.DocPain013.PyeeFinSvcsPrvdrFee:type_name -> FRMSMessage.Pyeefinsvcsprvdrfee
	46,  // 70: FRMSMessage.DocPain013.PyeeFinSvcsPrvdrComssn:type_name -> FRMSMessage.Pyeefinsvcsprvdrcomssn
	47,  // 71: FRMSMessage.EnvlpPain013.Doc:type_name -> FRMSMessage.DocPain013
	48,  // 72: FRMSMessage.SplmtrydataPain013.Envlp:type_name -> FRMSMessage.EnvlpPain013
	75,  // 73: FRMSMessage.CdttrftxinfPain013.PmtId:type_name -> FRMSMessage.Pmtid
	19,  // 74: FRMSMessage.CdttrftxinfPain013.PmtTpInf:type_name -> FRMSMessage.Pmttpinf
	22,  // 75: FRMSMessage.CdttrftxinfPain013.Amt:type_name -> FRMSMessage.Amt1
	23,  // 76: FRMSMessage.CdttrftxinfPain013.CdtrAgt:type_name -> FRMSMessage.Cdtragt
	24,  // 77: FRMSMessage.CdttrftxinfPain013.Cdtr:type_name -> FRMSMessage.Cdtr
	25,  // 78: FRMSMessage.CdttrftxinfPain013.CdtrAcct:type_name -> FRMSMessage.Cdtracct
	26,  // 79: FRMSMessage.CdttrftxinfPain013.Purp:type_name -> FRMSMessage.Purp
	28,  // 80: FRMSMessage.CdttrftxinfPain013.RgltryRptg:type_name -> FRMSMessage.Rgltryrptg
	49,  // 81: FRMSMessage.CdttrftxinfPain013.SplmtryData:type_name -> FRMSMessage.SplmtrydataPain013
	11,  // 82: FRMSMessage.PmtinfPain013.ReqdAdvcTp:type_name -> FRMSMessage.Reqdadvctp
	12,  // 83: FRMSMessage.PmtinfPain013.ReqdExctnDt:type_name -> FRMSMessage.Reqdexctndt
	12,  // 84: FRMSMessage.PmtinfPain013.XpryDt:type_name -> FRMSMessage.Reqdexctndt
	13,  // 85: FRMSMessage.PmtinfPain013.Dbtr:type_name -> FRMSMessage.Dbtr
	15,  // 86: FRMSMessage.PmtinfPain013.DbtrAcct:type_name -> FRMSMessage.Dbtracct
	18,  // 87: FRMSMessage.PmtinfPain013.DbtrAgt:type_name -> FRMSMessage.Dbtragt
	50,  // 88: FRMSMessage.PmtinfPain013.CdtTrfTxInf:type_name -> FRMSMessage.CdttrftxinfPain013
	43,  // 89: FRMSMessage.Cdtrpmtactvtnreq.GrpHdr:type_name -> FRMSMessage.GrphdrPain013
	51,  // 90: FRMSMessage.Cdtrpmtactvtnreq.PmtInf:type_name -> FRMSMessage.PmtinfPain013
	41,  // 91: FRMSMessage.Cdtrpmtactvtnreq.SplmtryData:type_name -> FRMSMessage.Splmtrydata1
	17,  // 92: FRMSMessage.Agt.FinInstnId:type_name -> FRMSMessage.Fininstnid
	2,   // 93: FRMSMessage.Chrgsinf.Amt:type_name -> FRMSMessage.Amt
	54,  // 94: FRMSMessage.Chrgsinf.Agt:type_name -> FRMSMessage.Agt
	17,  // 95: FRMSMessage.Instgagt.FinInstnId:type_name -> FRMSMessage.Fininstnid
	17,  // 96: FRMSMessage.Instdagt.FinInstnId:type_name -> FRMSMessage.Fininstnid
	55,  // 97: FRMSMessage.Txinfandsts.ChrgsInf:type_name -> FRMSMessage.Chrgsinf
	56,  // 98: FRMSMessage.Txinfandsts.InstgAgt:type_name -> FRMSMessage.Instgagt
	57,  // 99: FRMSMessage.Txinfandsts.InstdAgt:type_name -> FRMSMessage.Instdagt
	53,  // 100: FRMSMessage.Fitofipmtsts.GrpHdr:type_name -> FRMSMessage.Grphdr
	58,  // 101: FRMSMessage.Fitofipmtsts.TxInfAndSts:type_name -> FRMSMessage.Txinfandsts
	59,  // 102: FRMSMessage.Transaction.FIToFIPmtSts:type_name -> FRMSMessage.Fitofipmtsts
	61,  // 103: FRMSMessage.Typologies.rules:type_name -> FRMSMessage.Rules
	62,  // 104: FRMSMessage.Channels.typologies:type_name -> FRMSMessage.Typologies
	63,  // 105: FRMSMessage.Messages.channels:type_name -> FRMSMessage.Channels
	64,  // 106: FRMSMessage.Networkmap.messages:type_name -> FRMSMessage.Messages
	67,  // 107: FRMSMessage.Typologyresult.ruleResults:type_name -> FRMSMessage.Ruleresults
	70,  // 108: FRMSMessage.Typologyresult.workflow:type_name -> FRMSMessage.workflow
	68,  // 109: FRMSMessage.Channelresult.typologyResult:type_name -> FRMSMessage.Typologyresult
	69,  // 110: FRMSMessage.Tadpresult.channelResult:type_name -> FRMSMessage.Channelresult
	66,  // 111: FRMSMessage.Report.metaData:type_name -> FRMSMessage.Metadata
	71,  // 112: FRMSMessage.Report.tadpResult:type_name -> FRMSMessage.Tadpresult
	73,  // 113: FRMSMessage.GrphdrPacs008.SttlmInf:type_name -> FRMSMessage.Sttlminf
	2,   // 114: FRMSMessage.Intrbksttlmamt.Amt:type_name -> FRMSMessage.Amt
	75,  // 115: FRMSMessage.CdttrftxinfPacs008.PmtId:type_name -> FRMSMessage.Pmtid
	76,  // 116: FRMSMessage.CdttrftxinfPacs008.IntrBkSttlmAmt:type_name -> FRMSMessage.Intrbksttlmamt
	20,  // 117: FRMSMessage.CdttrftxinfPacs008.InstdAmt:type_name -> FRMSMessage.Instdamt
	55,  // 118: FRMSMessage.CdttrftxinfPacs008.ChrgsInf:type_name -> FRMSMessage.Chrgsinf
	8,   // 119: FRMSMessage.CdttrftxinfPacs008.InitgPty:type_name -> FRMSMessage.Initgpty
	13,  // 120: FRMSMessage.CdttrftxinfPacs008.Dbtr:type_name -> FRMSMessage.Dbtr
	15,  // 121: FRMSMessage.CdttrftxinfPacs008.DbtrAcct:type_name -> FRMSMessage.Dbtracct
	18,  // 122: FRMSMessage.CdttrftxinfPacs008.DbtrAgt:type_name -> FRMSMessage.Dbtragt
	23,  // 123: FRMSMessage.CdttrftxinfPacs008.CdtrAgt:type_name -> FRMSMessage.Cdtragt
	24,  // 124: FRMSMessage.CdttrftxinfPacs008.Cdtr:type_name -> FRMSMessage.Cdtr
	25,  // 125: FRMSMessage.CdttrftxinfPacs008.CdtrAcct:type_name -> FRMSMessage.Cdtracct
	26,  // 126: FRMSMessage.CdttrftxinfPacs008.Purp:type_name -> FRMSMessage.Purp
	38,  // 127: FRMSMessage.Doc.InitgPty:type_name -> FRMSMessage.Initgpty1
	78,  // 128: FRMSMessage.Envlp.Doc:type_name -> FRMSMessage.Doc
	79,  // 129: FRMSMessage.Splmtrydata.Envlp:type_name -> FRMSMessage.Envlp
	74,  // 130: FRMSMessage.Fitoficstmrcdt.GrpHdr:type_name -> FRMSMessage.GrphdrPacs008
	77,  // 131: FRMSMessage.Fitoficstmrcdt.CdtTrfTxInf:type_name -> FRMSMessage.CdttrftxinfPacs008
	28,  // 132: FRMSMessage.Fitoficstmrcdt.RgltryRptg:type_name -> FRMSMessage.Rgltryrptg
	29,  // 133: FRMSMessage.Fitoficstmrcdt.RmtInf:type_name -> FRMSMessage.Rmtinf
	80,  // 134: FRMSMessage.Fitoficstmrcdt.SplmtryData:type_name -> FRMSMessage.Splmtrydata
	135, // [135:135] is the sub-list for method output_type
	135, // [135:135] is the sub-list for method input_type
	135, // [135:135] is the sub-list for extension type_name
	135, // [135:135] is the sub-list for extension extendee
	0,   // [0:135] is the sub-list for field type_name
}

func init() { file_full_proto_init() }
func file_full_proto_init() {
	if File_full_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_full_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dtandplcofbirth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Amt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Schmenm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Othr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Prvtid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Ctctdtls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Initgpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_GrphdrPain001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtadvc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Reqdadvctp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Reqdexctndt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Id2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtracct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Clrsysmmbid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Fininstnid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtragt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pmttpinf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Instdamt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Eqvtamt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Amt1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cdtragt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cdtr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cdtracct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Purp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dtls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Rgltryrptg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Rmtinf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtr1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Dbtrfinsvcsprvdrfees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_DocPain001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_EnvlpPain001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_SplmtrydataPain001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cdttrftxinf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pmtinf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Glctn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Initgpty1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Doc1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Envlp1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Splmtrydata1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cstmrcdttrfinitn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_GrphdrPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pyeercvamt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pyeefinsvcsprvdrfee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pyeefinsvcsprvdrcomssn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_DocPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_EnvlpPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_SplmtrydataPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_CdttrftxinfPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_PmtinfPain013); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Cdtrpmtactvtnreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Grphdr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Agt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Chrgsinf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Instgagt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Instdagt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Txinfandsts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Fitofipmtsts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Typologies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Channels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Messages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Networkmap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Ruleresults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Typologyresult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Channelresult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessageWorkflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Tadpresult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Sttlminf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_GrphdrPacs008); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Pmtid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Intrbksttlmamt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_CdttrftxinfPacs008); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Doc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Envlp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Splmtrydata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessage_Fitoficstmrcdt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_full_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRMSMessageDataCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_full_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_full_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_full_proto_msgTypes[75].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_full_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_full_proto_goTypes,
		DependencyIndexes: file_full_proto_depIdxs,
		MessageInfos:      file_full_proto_msgTypes,
	}.Build()
	File_full_proto = out.File
	file_full_proto_rawDesc = nil
	file_full_proto_goTypes = nil
	file_full_proto_depIdxs = nil
}
